<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <id>tag:github.com,2008:/naver/ngrinder/wiki</id>
    <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki"/>
    <link rel="self" type="application/atom+xml" href="https://github.com/naver/ngrinder/wiki.atom"/>
    <title>ngrinder: Recent Wiki Updates</title>
    <updated>2019-07-25T15:00:48+09:00</updated>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/How-to-develop-plugin-in-kr/babf87eb5d15119c706c886182f22875fb2c8214</id>
        <published>2019-07-25T15:00:48+09:00</published>
        <updated>2019-07-25T15:00:48+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/How-to-develop-plugin-in-kr"/>
        <media:thumbnail url="https://avatars0.githubusercontent.com/u/16470009?s=60&amp;v=4"/>
        <author>
          <name>songeunwoo</name>
        </author>
        <content type="html">
          &lt;h1&gt;
&lt;a id=&quot;user-content-plugin-framework-for-java-pf4j-개발방법&quot; class=&quot;anchor&quot; href=&quot;#plugin-framework-for-java-pf4j-%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugin Framework for Java (PF4J) 개발방법&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;이 문서는 한국 사용자들의 nGrinder PF4J plugin 개발 편의를 위해 작성 되었다.
spring, java, maven으로 개발한다는 전재하에 작성 되었다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-도입-배경&quot; class=&quot;anchor&quot; href=&quot;#%EB%8F%84%EC%9E%85-%EB%B0%B0%EA%B2%BD&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;도입 배경&lt;/h2&gt;
&lt;p&gt;opensource인 nGrinder는 외부 개발자도 참여 가능하도록 Atlassian Plugin Framework(APF)를 제공하여 각 사용자들의 필요에 맞도록 plugin을 개발을 도모 하였으나,
그 활용도가 미미하여 접근하기 쉬운 &lt;a href=&quot;https://github.com/pf4j/pf4j&quot;&gt;Plugin Framework for Java (PF4J)&lt;/a&gt;를 nGrinder 3.4 버전부터 채택 하였다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PF4J 소개 : &lt;a href=&quot;https://github.com/decebals/pf4j&quot;&gt;https://github.com/decebals/pf4j&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;PF4J-UPDATE : &lt;a href=&quot;https://github.com/decebals/pf4j-update&quot;&gt;https://github.com/decebals/pf4j-update&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;ngrinder-plugins : &lt;a href=&quot;https://github.com/naver/ngrinder-plugins&quot;&gt;https://github.com/naver/ngrinder-plugins&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-pf4j-흐름도&quot; class=&quot;anchor&quot; href=&quot;#pf4j-%ED%9D%90%EB%A6%84%EB%8F%84&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PF4J 흐름도&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;아래 이미지는 전반적인 흐름도를 나타냅니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/naver/ngrinder/assets/pf4j-roadmap.png&quot; alt=&quot;mindmap&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;아래 소스 코드는 &lt;code&gt;OnLoginRunnable&lt;/code&gt;을 구현한 plugin을 호출하여 처리를 해주는 부분이다.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-java&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c1&quot;&gt;....&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;PluginManager&lt;/span&gt; pluginManager;

    &lt;span class=&quot;pl-k&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;UserDetails&lt;/span&gt; loadUserByUsername(&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; userId) {
        &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;OnLoginRunnable&lt;/span&gt; each &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; getPluginManager()&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getEnabledModulesByClass(&lt;span class=&quot;pl-smi&quot;&gt;OnLoginRunnable&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;class, defaultPlugin)) {
            &lt;span class=&quot;pl-smi&quot;&gt;User&lt;/span&gt; user &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; each&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;loadUser(userId);
            &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (user &lt;span class=&quot;pl-k&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;pl-c1&quot;&gt;.....&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;SecuredUser&lt;/span&gt;(user, user&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getAuthProviderClass());
            }
        }
    }
&lt;span class=&quot;pl-c1&quot;&gt;....&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PluginManager :  &lt;a href=&quot;https://github.com/naver/ngrinder/blob/master/ngrinder-controller/src/main/java/org/ngrinder/infra/plugin/PluginManager.java&quot;&gt;https://github.com/naver/ngrinder/blob/master/ngrinder-controller/src/main/java/org/ngrinder/infra/plugin/PluginManager.java&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-개발-방법&quot; class=&quot;anchor&quot; href=&quot;#%EA%B0%9C%EB%B0%9C-%EB%B0%A9%EB%B2%95&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;개발 방법&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;nGrinder는 사용자들이 필요에 맞춰 자유로운 Plugin을 개발할 수 있도록 아래와 같은 확장 포인터들을 제공하고 있다.
&lt;a href=&quot;https://github.com/naver/ngrinder/wiki/Plugin-extension-points&quot;&gt;https://github.com/naver/ngrinder/wiki/Plugin-extension-points&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pom.xml 설정&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;nGrinder repository를 pom.xml에 추가해준다.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-xml&quot;&gt;&lt;pre&gt;    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;repositories&lt;/span&gt;&amp;gt;
        ....
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;repository&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;id&lt;/span&gt;&amp;gt;ngrinder.maven.repo&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;id&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;url&lt;/span&gt;&amp;gt;https://github.com/naver/ngrinder/raw/ngrinder.maven.repo/releases&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;url&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;repository&lt;/span&gt;&amp;gt;
        ....
    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;repositories&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;확장 포인터를 상속 받기 위해 ngrinder-core와 pf4j의 dependency를 추가한다.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-xml&quot;&gt;&lt;pre&gt;    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;dependency&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.ngrinder&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;ngrinder-core&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;${ngrinder.core.version}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;scope&lt;/span&gt;&amp;gt;provided&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;scope&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;dependency&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;ro.fortsoft.pf4j&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;pf4j&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;${pf4j.version}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pom.xml 빌드 설정은 아래와 같이 JAR파일로 해주며, manifestEntries 설정은 아래를 참고하면 된다.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-xml&quot;&gt;&lt;pre&gt;    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;properties&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;project&lt;/span&gt;.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;project&lt;/span&gt;.build.sourceEncoding&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;java&lt;/span&gt;.version&amp;gt;1.8&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;java&lt;/span&gt;.version&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;ngrinder&lt;/span&gt;.core.version&amp;gt;3.4&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;ngrinder&lt;/span&gt;.core.version&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.id&amp;gt;siteminder-sso&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.id&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.class&amp;gt;org.ngrinder.sso.SiteminderSSOPlugin&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.class&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.version&amp;gt;1.0.0&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.version&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.provider&amp;gt;NAVER&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.provider&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.dependencies /&amp;gt;
    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;properties&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;build&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugins&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;maven-jar-plugin&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;2.4&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;configuration&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;archive&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;manifestEntries&lt;/span&gt;&amp;gt;
                            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Id&lt;/span&gt;&amp;gt;${plugin.id}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Id&lt;/span&gt;&amp;gt;
                            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Class&lt;/span&gt;&amp;gt;${plugin.class}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Class&lt;/span&gt;&amp;gt;
                            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Version&lt;/span&gt;&amp;gt;${plugin.version}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Version&lt;/span&gt;&amp;gt;
                            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Provider&lt;/span&gt;&amp;gt;${plugin.provider}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Provider&lt;/span&gt;&amp;gt;
                            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Dependencies&lt;/span&gt;&amp;gt;${plugin.dependencies}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Dependencies&lt;/span&gt;&amp;gt;
                        &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;manifestEntries&lt;/span&gt;&amp;gt;
                    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;archive&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;configuration&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugins&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PluginWrapper 주입&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;코드 작성시 PF4J plugin을 상속 받아준후 생성자로 PluginWrapper를 주입해 준다. 추가적으로 ngrinder-core project는 Maven Multi Module Project로 구성이 되어 있으므로 &lt;code&gt;createApplicationContext()&lt;/code&gt;는 null을 반환해 준다.
ngrinder-controller와  ngrinder-core 사이의 ApplicationContext 의존성 주입 문제는 nGrinder에서는 pf4j-spring 을 이용하여 해결하였다.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-java&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;NetworkOverFlow&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;SpringPlugin&lt;/span&gt; {

        &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;NetworkOverFlow&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;PluginWrapper&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;wrapper&lt;/span&gt;) {
            &lt;span class=&quot;pl-c1&quot;&gt;super&lt;/span&gt;(wrapper);
        }

        &lt;span class=&quot;pl-k&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ApplicationContext&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;createApplicationContext&lt;/span&gt;() {
            &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;;
        }

    }&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;확장 포인터 구현&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ngrinder-core 의 &lt;a href=&quot;https://github.com/naver/ngrinder/wiki/plugin-extension-points&quot;&gt;확장 포인터들&lt;/a&gt; 중에서 구현하고자 하는 코드를 내부 클레스로 구현한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@Extension 어노테이션을 추가해 PF4J 컴파일시에 인덱스 될 수 있도록 해준다.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-java&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;pl-k&quot;&gt;@Extension&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;SiteminderSSOPluginExtension&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;OnLoginRunnable&lt;/span&gt; {

        &lt;span class=&quot;pl-k&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;loadUser&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;userId&lt;/span&gt;) {
            &lt;span class=&quot;pl-c1&quot;&gt;....&lt;/span&gt;
        }

    }&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;인덱싱된 파일은 &lt;code&gt;target/classes/META-INF/extensions.idx&lt;/code&gt;에서 확인이 가능 하다. &lt;code&gt;PluginManager &amp;gt; loadPlugins()&lt;/code&gt; 에서 이 파일을 참고하기 위함이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;빌드후 생성된 jar파일을 &lt;code&gt;.ngrinder/plugins&lt;/code&gt; 폴더에 넣어준 후 ngrinder를 재 시작 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-마치며&quot; class=&quot;anchor&quot; href=&quot;#%EB%A7%88%EC%B9%98%EB%A9%B0&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;마치며..&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기존 Atlassian Plugin Framework(APF)를 사용할 때에는 atlas-package 라는 별도의 빌드 방식으로 comfile을 해야하는 어려움이 있었지만, PF4J는 기존 maven빌드 방식 그대로 사용이 가능 하다.&lt;/li&gt;
&lt;li&gt;APF에서 PF4J로 변경 하여 약 4000KB resource를 80KB로 감량 할수 있었다.&lt;/li&gt;
&lt;li&gt;많은 사용자분들이 PF4J를 활용하여, 필요에 맞춰 자유로운 Plugin을 개발 하였으면 한다.&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/How-to-develop-plugin/babf87eb5d15119c706c886182f22875fb2c8214</id>
        <published>2019-07-25T15:00:48+09:00</published>
        <updated>2019-07-25T15:00:48+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/How-to-develop-plugin"/>
        <media:thumbnail url="https://avatars0.githubusercontent.com/u/16470009?s=60&amp;v=4"/>
        <author>
          <name>songeunwoo</name>
        </author>
        <content type="html">
          &lt;h1&gt;
&lt;a id=&quot;user-content-how-to-develop-plugin-framework-for-java-pf4j&quot; class=&quot;anchor&quot; href=&quot;#how-to-develop-plugin-framework-for-java-pf4j&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to develop Plugin Framework for Java (PF4J)&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;It requires Spring and Java. Explicit build support is provided for Maven.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-introduction&quot; class=&quot;anchor&quot; href=&quot;#introduction&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;nGrinder, an opensource, had used Atlassian Plugin Framework (APF) to enable external developers to participate, but it was not that easy to develop on top of it. Therefore, &lt;a href=&quot;https://github.com/pf4j/pf4j&quot;&gt;Plugin Framework for Java (PF4J)&lt;/a&gt;, which is easy to use, has been adopted from nGrinder 3.4.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;About PF4J : &lt;a href=&quot;https://github.com/decebals/pf4j&quot;&gt;https://github.com/decebals/pf4j&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;PF4J-UPDATE : &lt;a href=&quot;https://github.com/decebals/pf4j-update&quot;&gt;https://github.com/decebals/pf4j-update&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;nGrinder-plugins : &lt;a href=&quot;https://github.com/naver/ngrinder-plugins&quot;&gt;https://github.com/naver/ngrinder-plugins&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-pf4j-flow-chart&quot; class=&quot;anchor&quot; href=&quot;#pf4j-flow-chart&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PF4J Flow Chart&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The image below shows the overall PF4J flow chart.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/naver/ngrinder/assets/pf4j-roadmap.png&quot; alt=&quot;mindmap&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The code below is the plugin which implements &lt;code&gt;OnLoginRunnable&lt;/code&gt; interface.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-java&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c1&quot;&gt;....&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;@Autowired&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;PluginManager&lt;/span&gt; pluginManager;

&lt;span class=&quot;pl-k&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;UserDetails&lt;/span&gt; loadUserByUsername(&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; userId) {
    &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;OnLoginRunnable&lt;/span&gt; each &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; getPluginManager()&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getEnabledModulesByClass(&lt;span class=&quot;pl-smi&quot;&gt;OnLoginRunnable&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;class, defaultPlugin)) {
        &lt;span class=&quot;pl-smi&quot;&gt;User&lt;/span&gt; user &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; each&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;loadUser(userId);
        &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (user &lt;span class=&quot;pl-k&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;) {
          &lt;span class=&quot;pl-c1&quot;&gt;.....&lt;/span&gt;
      &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;SecuredUser&lt;/span&gt;(user, user&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getAuthProviderClass());
        }
    }
}
&lt;span class=&quot;pl-c1&quot;&gt;....&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PluginManager :  &lt;a href=&quot;https://github.com/naver/ngrinder/blob/master/ngrinder-controller/src/main/java/org/ngrinder/infra/plugin/PluginManager.java&quot;&gt;https://github.com/naver/ngrinder/blob/master/ngrinder-controller/src/main/java/org/ngrinder/infra/plugin/PluginManager.java&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-how-to-use&quot; class=&quot;anchor&quot; href=&quot;#how-to-use&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Use&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;nGrinder provides the following extension points.
&lt;a href=&quot;https://github.com/naver/ngrinder/wiki/Plugin-extension-points&quot;&gt;https://github.com/naver/ngrinder/wiki/Plugin-extension-points&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pom.xml setting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add nGrinder repository to pom.xml.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-xml&quot;&gt;&lt;pre&gt;&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;repositories&lt;/span&gt;&amp;gt;
    ....
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;repository&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;id&lt;/span&gt;&amp;gt;ngrinder.maven.repo&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;id&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;url&lt;/span&gt;&amp;gt;https://github.com/naver/ngrinder/raw/ngrinder.maven.repo/releases&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;url&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;repository&lt;/span&gt;&amp;gt;
    ....
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;repositories&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add ngrinder-core and PF4J dependencies to implement the extension points.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-xml&quot;&gt;&lt;pre&gt;&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.ngrinder&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;ngrinder-core&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;${ngrinder.core.version}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;scope&lt;/span&gt;&amp;gt;provided&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;scope&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;ro.fortsoft.pf4j&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;pf4j&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;${pf4j.version}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The pom.xml build settings are set in JAR file as shown below, and the manifestEntries settings can be found below.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-xml&quot;&gt;&lt;pre&gt;&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;properties&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;project&lt;/span&gt;.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;project&lt;/span&gt;.build.sourceEncoding&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;java&lt;/span&gt;.version&amp;gt;1.8&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;java&lt;/span&gt;.version&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;ngrinder&lt;/span&gt;.core.version&amp;gt;3.4&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;ngrinder&lt;/span&gt;.core.version&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.id&amp;gt;siteminder-sso&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.id&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.class&amp;gt;org.ngrinder.sso.SiteminderSSOPlugin&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.class&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.version&amp;gt;1.0.0&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.version&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.provider&amp;gt;NAVER&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.provider&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;.dependencies /&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;properties&lt;/span&gt;&amp;gt;

&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;build&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugins&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.apache.maven.plugins&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;groupId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;maven-jar-plugin&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;2.4&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;version&lt;/span&gt;&amp;gt;
            &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;configuration&lt;/span&gt;&amp;gt;
                &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;archive&lt;/span&gt;&amp;gt;
                    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;manifestEntries&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Id&lt;/span&gt;&amp;gt;${plugin.id}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Id&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Class&lt;/span&gt;&amp;gt;${plugin.class}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Class&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Version&lt;/span&gt;&amp;gt;${plugin.version}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Version&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Provider&lt;/span&gt;&amp;gt;${plugin.provider}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Provider&lt;/span&gt;&amp;gt;
                        &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;plugin-Dependencies&lt;/span&gt;&amp;gt;${plugin.dependencies}&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin-Dependencies&lt;/span&gt;&amp;gt;
                    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;manifestEntries&lt;/span&gt;&amp;gt;
                &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;archive&lt;/span&gt;&amp;gt;
            &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugin&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;plugins&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;build&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PluginWrapper injection&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;After extending PF4J plugin, inject the PluginWrapper in the constructor. And make the &lt;code&gt;createApplicationContext()&lt;/code&gt; method return null. Because &lt;code&gt;ngrinder-core&lt;/code&gt; project is a Maven Multi Module Projects.
Additional pf4j-springs were used to solve the dependency injection problem between ngrinder-controller and ngrinder-core projects.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-java&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;NetworkOverFlow&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;SpringPlugin&lt;/span&gt; {

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;NetworkOverFlow&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;PluginWrapper&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;wrapper&lt;/span&gt;) {
        &lt;span class=&quot;pl-c1&quot;&gt;super&lt;/span&gt;(wrapper);
    }

    &lt;span class=&quot;pl-k&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ApplicationContext&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;createApplicationContext&lt;/span&gt;() {
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;;
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implements Extension Points&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Implement &lt;a href=&quot;https://github.com/naver/ngrinder/wiki/plugin-extension-points&quot;&gt;nGrinder-core extension points&lt;/a&gt; with inner classes.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;@Extension&lt;/code&gt; annotation to make it indexed in PF4J compilation.
&lt;div class=&quot;highlight highlight-source-java&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;@Extension&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;SiteminderSSOPluginExtension&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;OnLoginRunnable&lt;/span&gt; {

    &lt;span class=&quot;pl-k&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;loadUser&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;userId&lt;/span&gt;) {
        &lt;span class=&quot;pl-c1&quot;&gt;....&lt;/span&gt;
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;By using &lt;code&gt;PluginManager::loadPlugins&lt;/code&gt; method, you can load indexed files. Indexed files can be found in &lt;code&gt;target/classes/META-INF/extensions.idx&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After build, put the generated jar file into &lt;code&gt;~/.ngrinder/plugins&lt;/code&gt; directory and restart the nGrinder.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-conclusion&quot; class=&quot;anchor&quot; href=&quot;#conclusion&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When using the old Atlassian Plugin Framework (APF), there was difficulty in creating a compile with a separated build method called atlas-package, PF4J can be used in the existing maven build method.&lt;/li&gt;
&lt;li&gt;We changed from APF to PF4J, and we were able to reduce resources about 4000KB to 80KB.&lt;/li&gt;
&lt;li&gt;We want many users to develop nGrinder plugins freely with PF4J.&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Plugin-extension-points/9fb60d31f20ddee9d0f30bdfd6a7bac181e545c4</id>
        <published>2019-07-25T14:00:26+09:00</published>
        <updated>2019-07-25T14:00:26+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Plugin-extension-points"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;The following describes the plugin structure in nGrinder. From 3.4, nGrinder uses the &lt;a href=&quot;https://github.com/pf4j/pf4j&quot;&gt;Plugin Framework for Java (PF4J)&lt;/a&gt; to customize nGrinder behavior without modifying nGrinder core code. nGrinder supports the following plugin extension points.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Extension Interface&lt;/th&gt;
&lt;th&gt;Extension Point Name(Plugin-Key)&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/naver/ngrinder/blob/master/ngrinder-core/src/main/java/org/ngrinder/extension/OnLoginRunnable.java&quot;&gt;OnLoginRunnable&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;on-login&lt;/td&gt;
&lt;td&gt;loadUser is invoked whenever user info is required, Therefore if you like to allow not-yet-registered users to access ngrinder without explicit registration, you have to write the loadUser to load the user info from external user store procedure. Then this will invoke validateUser method to check  the user provides the valid password for the given id. If you have the external server which is able to validate the user with the given id and password, you can use it for the user validation. Default plugin embedded in nGrinder can be found in &lt;a href=&quot;https://github.com/naver/ngrinder/blob/master/ngrinder-controller/src/main/java/org/ngrinder/security/DefaultLoginPlugin.java&quot;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/naver/ngrinder/blob/master/ngrinder-core/src/main/java/org/ngrinder/extension/OnTestSamplingRunnable.java&quot;&gt;OnTestSamplingRunnable&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;on-test-sampling&lt;/td&gt;
&lt;td&gt;This is a place to invoke external logic which should be executed whenever the sampling is started, is performed, and stopped. For example, If you have to monitor external servers using your own logic, you can use this extension point to retrieve them. sampling method should be very fast. we&#39;re expecting sampling method should be done within 2 ms. If it takes more time to finish this method, it can eventually ruin the performance test sampling. So we&#39;re highly recommend the plugin implementer to invoke another thread which retrieves the data in the startSampling method and fetch the already retrieved data from this thread in sampling method. You can find the sample implementation &lt;a href=&quot;https://github.com/naver/ngrinder-networkoverflow/blob/master/src/main/java/org/ngrinder/network/NetworkOverFlow.java&quot;&gt;here&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/naver/ngrinder/blob/master/ngrinder-core/src/main/java/org/ngrinder/extension/OnControllerLifeCycleRunnable.java&quot;&gt;OnControllerLifeCycleRunnable&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;on-start&lt;/td&gt;
&lt;td&gt;This is the plugin extension point to invoke your logic when the start and shutdown nGrinder controller.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/naver/ngrinder/blob/master/ngrinder-core/src/main/java/org/ngrinder/extension/OnPeriodicWorkingAgentCheckRunnable.java&quot;&gt;OnPeriodicWorkingAgentCheckRunnable&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;on-working-agent-check&lt;/td&gt;
&lt;td&gt;This is the plugin extension point to invoke your logic with the current agent status periodically. You can find the sample implementation here. This sample checks the current controllers whole agent&#39;s network usages and if it is over the designated traffics, stops all running test to block the network overflow.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/naver/ngrinder/blob/develop/ngrinder-core/src/main/java/org/ngrinder/extension/OnTestLifeCycleRunnable.java&quot;&gt;OnTestLifeCycleRunnable&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;on-test-start&lt;/td&gt;
&lt;td&gt;This is the plugin extension point to invoke your logic when the test is executed and stopped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/naver/ngrinder/blob/develop/ngrinder-core/src/main/java/org/ngrinder/extension/OnServletFilter.java&quot;&gt;OnServletFilter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;on-servletfilter&lt;/td&gt;
&lt;td&gt;This is only one interface which ngrinder itself does not define. You should import as a servlet dependency in the plugin’s pom.xml to extend this interface.&lt;div&gt;&amp;lt;!-- Servlet --&amp;gt;&lt;br&gt;&amp;lt;dependency&amp;gt;&lt;br&gt;    &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;&lt;br&gt;    &amp;lt;artifactId&amp;gt;servlet-api&amp;lt;/artifactId&amp;gt;&lt;br&gt;    &amp;lt;version&amp;gt;2.5&amp;lt;/version&amp;gt;&lt;br&gt;    &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&lt;br&gt;&amp;lt;/dependency&amp;gt;&lt;/div&gt;The plugin will be located in the servlet filter chain. Therefore if you need to intercept the HTTPRequest or HTTPResponse to modify the WAS level behavior, you should implement this plugin. The sample implementation can be found &lt;a href=&quot;https://github.com/naver/ngrinder-siteminder-sso/blob/master/src/main/java/org/ngrinder/sso/SiteMinderLogoutFilter.java&quot;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/naver/ngrinder/blob/develop/ngrinder-core/src/main/java/org/ngrinder/extension/OnPreAuthServletFilter.java&quot;&gt;OnPreAuthServletFilter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;on-preauth-servletfilter&lt;/td&gt;
&lt;td&gt;This is the same extension point as on-servletfilter but it’s located before pre-auth by spring security is executed. The most common usage of this extension point is to allow SSO(such as SiteMinder) which is already processed by web servers like apache httpd. The sample implementation can be found &lt;a href=&quot;https://github.com/naver/ngrinder-siteminder-sso/blob/master/src/main/java/org/ngrinder/sso/SiteMinderFilter.java&quot;&gt;here&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Groovy-Maven-Structure/f0ad3a2ad7583fbd97390d6dfb6c32c65b7e3c22</id>
        <published>2019-06-18T17:41:54+09:00</published>
        <updated>2019-06-18T17:41:54+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Groovy-Maven-Structure"/>
        <media:thumbnail url="https://avatars3.githubusercontent.com/u/14273601?s=60&amp;v=4"/>
        <author>
          <name>donggyu04</name>
        </author>
        <content type="html">
          &lt;blockquote&gt;
&lt;p&gt;When you run the groovy maven project, it might take time to run the test at the first time. It&#39;s because maven project requires to download the related libraries from maven repo. Please be patient. :-).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you choose to use Groovy Script when you create a script, it works similar to Jython script except the JUnit styled test cases. However if you want not only to use Groovy but also to execute JUnit runner in your IDE or easily configure dependencies, you can choose to make Groovy Maven Project first.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Groovy-Maven-Structure-5ed57.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you create Groovy Maven Project, you will have the following directories containing three files under the specified project folder.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Groovy-Maven-Structure-e588d.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Location&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;${name}/pom.xml&lt;/td&gt;
&lt;td&gt;Maven project file. You can add the library dependencies in this file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${name}/src/main/java/Test1.groovy&lt;/td&gt;
&lt;td&gt;Default groovy script file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${name}/src/main/java/resources1.txt&lt;/td&gt;
&lt;td&gt;Default resource file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${name}/lib&lt;/td&gt;
&lt;td&gt;Not automatically generated. but this folder can be used to distribute private libraries if available.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can import this project into you IDE using SVN checkout. You may need to check the below links.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Import-Groovy-Maven-Project-in-IntelliJ&quot;&gt;Import Groovy Maven Project in IntelliJ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In pom.xml, You can specify the additional library dependencies.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
		 xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&amp;gt;
	&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
	&amp;lt;groupId&amp;gt;ngrinder&amp;lt;/groupId&amp;gt;
	&amp;lt;artifactId&amp;gt;${name}&amp;lt;/artifactId&amp;gt;
	&amp;lt;version&amp;gt;0.0.1&amp;lt;/version&amp;gt;

	&amp;lt;properties&amp;gt;
		&amp;lt;ngrinder.version&amp;gt;3.4.2&amp;lt;/ngrinder.version&amp;gt;
		&amp;lt;maven.compiler.source&amp;gt;1.7&amp;lt;/maven.compiler.source&amp;gt;
		&amp;lt;maven.compiler.target&amp;gt;1.7&amp;lt;/maven.compiler.target&amp;gt;
		&amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
	&amp;lt;/properties&amp;gt;

	&amp;lt;repositories&amp;gt;
		&amp;lt;repository&amp;gt;
			&amp;lt;id&amp;gt;ngrinder.maven.repo&amp;lt;/id&amp;gt;
			&amp;lt;url&amp;gt;https://github.com/naver/ngrinder/raw/ngrinder.maven.repo/releases&amp;lt;/url&amp;gt;
		&amp;lt;/repository&amp;gt;
	&amp;lt;/repositories&amp;gt;
	&amp;lt;dependencies&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.ngrinder&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;ngrinder-groovy&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;${ngrinder.version}&amp;lt;/version&amp;gt;
			&amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
		&amp;lt;/dependency&amp;gt;

		&amp;lt;!-- Add the dependencies --&amp;gt;
		&amp;lt;!--
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;commons-io&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;commons-io&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;2.0.1&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;
		 --&amp;gt;
		&amp;lt;!-- Put your private library like this --&amp;gt;
		&amp;lt;!--
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;your_lib&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;your_lib&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;your_lib_version&amp;lt;/version&amp;gt;
			&amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;
			&amp;lt;systemPath&amp;gt;${project.basedir}/lib/hello.jar&amp;lt;/systemPath&amp;gt;
		&amp;lt;/dependency&amp;gt;
		--&amp;gt;
	&amp;lt;/dependencies&amp;gt;

	&amp;lt;build&amp;gt;
		&amp;lt;plugins&amp;gt;
			&amp;lt;plugin&amp;gt;
				&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
				&amp;lt;artifactId&amp;gt;maven-eclipse-plugin&amp;lt;/artifactId&amp;gt;
				&amp;lt;version&amp;gt;2.9&amp;lt;/version&amp;gt;
				&amp;lt;configuration&amp;gt;
					&amp;lt;additionalProjectnatures&amp;gt;
						&amp;lt;projectnature&amp;gt;
							org.eclipse.jdt.groovy.core.groovyNature
						&amp;lt;/projectnature&amp;gt;
						&amp;lt;projectnature&amp;gt;
							org.eclipse.m2e.core.maven2Nature
						&amp;lt;/projectnature&amp;gt;
					&amp;lt;/additionalProjectnatures&amp;gt;
				&amp;lt;/configuration&amp;gt;
			&amp;lt;/plugin&amp;gt;
		&amp;lt;/plugins&amp;gt;
	&amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you like to add the private libraries which do not exist in the public maven repository, you can put them in the lib folder directly and specify the systemPath option like the above sample. lib folder will be automatically detected and copied into agents as well when the controller prepares the script distribution.&lt;br&gt;
When a script is selected in the performance test configuration page, the controller automatically detects whether the script is under the folder ${name}/src/main/java and there is pom.xml in the base folder. If the controller detects it, the controller will copy the files in the ${name}/src/main/resources and ${name}/src/main/java folder recursively into controller’s distribution preparation folder before distributing them to agents. The below figure illustrates how each folder in svn are copied to the distribution preparation folder.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;folder&lt;/th&gt;
&lt;th&gt;path&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;from svn foler&lt;/td&gt;
&lt;td&gt;pom.xml&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;src/main/java/Test1.groovy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;src/main/java/package_names/the_other_groovyscripts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;src/main/resources/resources1.txt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;src/main/resources/subfolder_names/the_other_resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;lib (private libraries)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;folder&lt;/th&gt;
&lt;th&gt;path&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;to dist folder&lt;/td&gt;
&lt;td&gt;Test1.groovy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;resources1.txt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;package_names/the_other_groovy_scripts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;subfolder_names/the_other_resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;lib (copied from maven dependencies and files in lib folder existing subversion)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In generic Jython script and Groovy script, the resources are loaded using command &quot;open(“./resources/resource1.txt”)&quot; or &quot;new File(&quot;./resources/resource1.txt&quot;). However this won’t work in Groovy Maven project. We had to replace this path based resource discovery into the classpath based resource discovery to make Groovy JUnit test workable in IDE as well,&lt;br&gt;
All resources in ${project_name}/src/main/resources/.. are copied into the same folder where the test script is copied but keeping the sub directory hierachy. You can load the resources using code below.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.codehaus.groovy.reflection.ReflectionUtils&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;....&lt;/span&gt;


&lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;YourTest&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot;&gt;String&lt;/span&gt; text;

    &lt;span class=&quot;pl-k&quot;&gt;@BeforeThread&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;beforeThread&lt;/span&gt;() {
       &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; In groovy, InputStream contains text field.&lt;/span&gt;
       text &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; loadResourceFromClassPath(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;/resource1.txt&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;text;
    }

    &lt;span class=&quot;pl-k&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;doTest&lt;/span&gt;() {
       &lt;span class=&quot;pl-k&quot;&gt;....&lt;/span&gt;
    }

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; This is groovy way to load resource from classpath&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;loadResourceFromClassPath&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;resourcePath&lt;/span&gt;) {
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;ReflectionUtils&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getCallingClass(&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getResourceAsStream(resourcePath);
    }
}&lt;/pre&gt;&lt;/div&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Architecture/554f94a484225fa7f40358f3d266b118b40b17af</id>
        <published>2018-03-04T18:24:32+08:00</published>
        <updated>2018-03-04T18:24:32+08:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Architecture"/>
        <media:thumbnail url="https://avatars2.githubusercontent.com/u/4586906?s=60&amp;v=4"/>
        <author>
          <name>chengaomin</name>
        </author>
        <content type="html">
          &lt;h1&gt;
&lt;a id=&quot;user-content-philosophy&quot; class=&quot;anchor&quot; href=&quot;#philosophy&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Philosophy&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Reliability over Accuracy&lt;/li&gt;
&lt;li&gt;TPS over VUser&lt;/li&gt;
&lt;li&gt;Code is always better than GUI Editor&lt;/li&gt;
&lt;li&gt;Do not limit!!&lt;/li&gt;
&lt;li&gt;File System is faster than DB if we use it correctly.&lt;/li&gt;
&lt;li&gt;Convention over Configuration&lt;/li&gt;
&lt;li&gt;Open Closed policy by Plugin Model&lt;/li&gt;
&lt;li&gt;One shot Installation&lt;/li&gt;
&lt;li&gt;Need to add code? Remove same amount of code first.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
&lt;a id=&quot;user-content-general-architecture&quot; class=&quot;anchor&quot; href=&quot;#general-architecture&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General Architecture&lt;/h1&gt;
&lt;p&gt;nGrinder is a application for running test scripts written in jython(python running on JVM) across a number of machines. It&#39;s internal engine is based on Grinder. nGrinder wraps Grinder&#39;s console and agent with a controller and agent, respectively, and extends several features to enable multiple concurrent tests.
&lt;img src=&quot;assets/Architecture-29bb2.png&quot; alt=&quot;system_architecture&quot;&gt;&lt;/p&gt;
&lt;p&gt;nGrinder consists of two major components.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Controller
- Provides web interface for performance testing.
- Coordinates test processes.
- Collates and displays test statistics.
- Let user create and modify script .&lt;/li&gt;
&lt;li&gt;Agent
- Runs processes and threads that put loads on target machines when running in agent mode.
- Monitors target system performance (e.g.: CPU/memory) when running in monitor mode&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;When agents are started, they attempt to connect to a controller. They then are attached in AgentControllerServer component. AgentControllerServer(Which is like an agent pool) manages the current agent pool. Whenever a user starts a performance test, a new console that coordinates agents is created, and the required number of agents is handed over from AgentControllerServer. The console (named SingleConsole to differentiate it from Console in Grinder) sends the test script and test resources to multiple assigned agents and starts to control the test flow until the test is over. After the test is finished, the used agents are returned to AgentControllerServer to be used in the other tests later. SingleConsole is returned to ConsoleManager as well.&lt;/p&gt;
&lt;p&gt;The biggest difference between nGrinder and Grinder is that nGrinder keeps multiple console instances and agents in the controller. Each console is independent from the others, and all can run concurrently. Many agents can be attached in advance, and can be assigned whenever they are requested. Unlike grinder, nGrinder is developed to maximize utilization for agents machines.&lt;/p&gt;
&lt;p&gt;Well-known load test tools such as &quot;Performance Center&quot; have a test reservation feature to guarantee agent availability when a user starts a test. But the reservation approach causes an agent utilization problem. We observed that people tend to reserve agents as a precaution even while they are actually not testing. In our experience, the average agent CPU utilization is less than 10% as a result.&lt;/p&gt;
&lt;p&gt;For this reason, instead of reservation, &lt;strong&gt;nGrinder enables multiple test and dynamic agent allocation&lt;/strong&gt; so that agents are dynamically assigned to tests only when a real test is performed. This makes nGrinder a unique solution among all competitors. With a relatively small number of agents, multiple users can run multiple tests concurrently. The number of possible concurrent tests depends on the number of free agents.&lt;/p&gt;
&lt;h1&gt;
&lt;a id=&quot;user-content-cluster-architecture&quot; class=&quot;anchor&quot; href=&quot;#cluster-architecture&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cluster Architecture&lt;/h1&gt;
&lt;p&gt;From nGrinder version 3.1, we introduced nGrinder controller clustering, which make the performance test can be executed by one of the clustered controller and support multiple set of agents(named region) to be used.&lt;/p&gt;
&lt;p&gt;Below is the architecture without cluster supports.
&lt;img src=&quot;assets/Architecture-5c692.png&quot; alt=&quot;standalone_architecture&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;nGrinder uses an embedded svn server(SVNKit DAV) to manage script files. The svn repositories are stored in ${NGRINDER_HOME} directory.&lt;/li&gt;
&lt;li&gt;nGrinder uses EhCache to improve the data retrieval performance from DB and SVN repositories.&lt;/li&gt;
&lt;li&gt;nGrinder uses Spring Security to protect the system and uses Atlassian Plugin Framework for extensibility.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you enable clustering mode by configuring the system.conf (See link) and install nGrinder into multiple machine, the system architect is changed as below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Architecture-4913e.png&quot; alt=&quot;cluster_architecture&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;All the controllers in the cluster shares the same DB and file system. All ngrinder controller should point same ${NGRINDER_HOME} folder which should be shared by NFS.&lt;/li&gt;
&lt;li&gt;Each controllers can have its own special properties and log output folder. This information will be saved in ${NGRINDER_EX_HOME} in the each controller.&lt;/li&gt;
&lt;li&gt;All controllers replicates the EhCache to each other to make some data to be visible in all controllers in cluster.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Each controller can serve nGrinder web content equally but handles the different test set depending the region. We don&#39;t provide any session clustering by default. So you may suffer login problem because sessions stored in a controller are not replicated to the other controllers. You may need to configure this by referring Tomcat Session Clustering Guide or use the sticky session on L4. If you are not a expert on this, Just let users to connect only one controller. It&#39;s the easiest. :-)&lt;/p&gt;
&lt;p&gt;How to configure the clustering?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Easy-Clustering-Guide&quot;&gt;Easy Clustering Guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Check &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Advanced-Clustering-Guide&quot;&gt;Advanced Clustering Guide&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
&lt;a id=&quot;user-content-technology-stack&quot; class=&quot;anchor&quot; href=&quot;#technology-stack&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Technology Stack&lt;/h1&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-client-tier&quot; class=&quot;anchor&quot; href=&quot;#client-tier&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client Tier&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Bootstrap&lt;/strong&gt; : Bootstrap has a lot of predefined web style(js, css etc ), it is sleek and intuitive.We uses it span all over the nGrinder web pages.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Bootstrap-slider&lt;/strong&gt;:Bootstrap-slider is a beauty of Bootstrap UI widgets. We use this for test duration setting in Test Configuration.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Jquery&lt;/strong&gt; :jQuery is a lightweight JavaScript library,it make much easier to use JS on nGrinder web pages.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Jquery Validate&lt;/strong&gt; : Jquery Validate is an excellent tool for web pages to validate data entries at the client side.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Datatables&lt;/strong&gt; : DataTables is a highly flexible JS tool which will add advanced interaction controls to any HTML table.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Select2&lt;/strong&gt; : Select2 is jQuery based replacement for select boxes which supports searching and infinite scrolling of results.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;JqPlot&lt;/strong&gt; :  jqPlot could generate pure client-side JS charts in web pages and therefore all nGrinder data chart are implemented with JqPlot.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CodeMirror&lt;/strong&gt; :CodeMirror is an excellent code editor with syntax highlighting in the browser.We use it in nGrinder Script Editor.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-controller-tier&quot; class=&quot;anchor&quot; href=&quot;#controller-tier&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controller Tier&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;FreeMarker&lt;/strong&gt; :FreeMarker is a Java-based template engine focusing on MVC framework and nGrinder web pages is used it as a template engine.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Spring Security&lt;/strong&gt; :  Spring Security is not only a powerful and highly configurable authentication and access-control framework, but also one of the most mature and widely used security framework. Therefore it protects nGrinder from illegal access.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Spring MVC&lt;/strong&gt; : Spring MVC provides rich functionality for building robust web applications. nGrinder uses wonderfully its annotation based configuration.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GSon&lt;/strong&gt; :Gson is a Java library that can be used to convert Java Objects into its JSON representation, and vice versa.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SVNKit Dav&lt;/strong&gt; : We use this for serving the underlying SVN content thought web.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-service-tier&quot; class=&quot;anchor&quot; href=&quot;#service-tier&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Service Tier&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The Grinder&lt;/strong&gt; : Grinder is a java load Testing framework which nGrinder mainly use. Without Grinder, no nGrinder exists&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Atlassian Plugin Framework&lt;/strong&gt; :We use this framework to make the plugin development easier. It&#39;s not so heavy weighted and easy to use!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Spring&lt;/strong&gt;  : Spring Framework provides a comprehensive programming and configuration model for J2ee applications and nGrinder use as a its base architecture. At the first time, we thought Spring is too heavy to adopt. However we choose this because it&#39;s the most commonly used framework in our company(Naver) and it was easier to get the help from colleagues. Eventually we&#39;re convinced that we can not make nGrinder&#39;s rich functionality without highly configurable architecture Spring provides.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;EhCache&lt;/strong&gt; : Ehcache has excellent Spring integration. nGrinder uses this to speed up the data retrieval and to synchronize data between controllers in cluster mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-data-tier&quot; class=&quot;anchor&quot; href=&quot;#data-tier&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Tier&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Spring Data&lt;/strong&gt; :Spring Data simplifies the development of JPA-based data access layer. nGrinder uses RDBMS but this enables the RDBMS access without a single line of SQL.
Hibernate : Hibernate is a powerful technology for persisting data,and it is Spring Data back-end within nGrinder.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;H2&lt;/strong&gt; : H2 is one of two databases nGrinder supports and H2 is used as a default DB.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cubrid&lt;/strong&gt; :Cubrid is one of two databases nGrinder supports. It&#39;s stable enough and supports HA.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Liquibase&lt;/strong&gt; : Liquibase is an open source that automates database schema updates. It supports almost all kinds of major databases. However it does not support Cubrid so we had to develop the cubrid driver for Liquibase.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SVNKit&lt;/strong&gt; : SVNKit is a pure Java toolkit which implements all subversion features and provides APIs to work with Subversion.&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Installation-Guide/6fecd817cb2e9ef75c7b6ae4b9cc742b54210f05</id>
        <published>2017-12-05T23:09:45+09:00</published>
        <updated>2017-12-05T23:09:45+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Installation-Guide"/>
        <media:thumbnail url="https://avatars3.githubusercontent.com/u/19304940?s=60&amp;v=4"/>
        <author>
          <name>theverytak</name>
        </author>
        <content type="html">
          &lt;h3&gt;
&lt;a id=&quot;user-content-prerequisite&quot; class=&quot;anchor&quot; href=&quot;#prerequisite&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisite&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;nGrinder is a combination of a web application(Controller) and Java applications(Agent, Monitor). If you don’t know what a controller and agent are, please refer to Architecture.&lt;br&gt;
To install nGrinder controller and agent, you need Oracle JDK 1.6~ or OpenJDK 1.7~.&lt;/li&gt;
&lt;li&gt;Please check your PATH environment variable if your java path is located at the head of PATH so that appropriate java can be run.&lt;/li&gt;
&lt;li&gt;nGrinder uses many ports to communicate with agent and agent. If some ports are blocked by your firewall, you should ask the network admin to open the following ports in the firewall. These ports can be configured by the configuration.
&lt;ul&gt;
&lt;li&gt;Agent : Any ==&amp;gt; Controller : 16001&lt;/li&gt;
&lt;li&gt;Agent : Any ==&amp;gt; Controller : 12000 ~ 12000+(the number of concurrent tests allowed)&lt;/li&gt;
&lt;li&gt;Controller : Any ==&amp;gt; Monitor : 13243&lt;/li&gt;
&lt;li&gt;Controller ==&amp;gt; Public user : This is dependent on your tomcat configuration. By default, it is set as 8080.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-download&quot; class=&quot;anchor&quot; href=&quot;#download&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Download&lt;/h3&gt;
&lt;p&gt;You can download nGridner controller from the following link.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/naver/ngrinder/releases&quot;&gt;https://github.com/naver/ngrinder/releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-install-controller&quot; class=&quot;anchor&quot; href=&quot;#install-controller&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Controller&lt;/h3&gt;
&lt;p&gt;nGrinder is distributed as a self executable web archive file(WAR) file just like Jenkins, you can put this archive file into your familiar web application server (like Tomcat) or run the package in the command line.&lt;br&gt;
&lt;strong&gt;!Be careful, Never locate the war file in the space containing folder like &quot;C:\Program Files\Tomcat\webapps&quot;.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-run-on-docker&quot; class=&quot;anchor&quot; href=&quot;#run-on-docker&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run on Docker&lt;/h3&gt;
&lt;p&gt;If you prefer to run in docker. Please see &lt;a href=&quot;https://hub.docker.com/r/ngrinder/controller/&quot; rel=&quot;nofollow&quot;&gt;https://hub.docker.com/r/ngrinder/controller/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-run-as-a-self-executable&quot; class=&quot;anchor&quot; href=&quot;#run-as-a-self-executable&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run as a self executable&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Please make sure that you configured PATH and JAVA_HOME properly in advance.&lt;br&gt;
There are a lot of questions by the wrong PATH configuration. You should put java path in the head of PATH env var.&lt;br&gt;
For example, in windows it should be set as C:\Program Files\Java\Your java Version\bin;BlarBlar...&lt;/li&gt;
&lt;li&gt;Run nGrinder controller with the following command.
&lt;pre&gt;&lt;code&gt;java -jar ngrinder-controller-X.X.war
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Then you will see the following error message. nGrinder requires very big PermGen memory because it includes very many libraries such as  SVNKit, maven, Jetty webserver, groovy, and python. Re-run the ngrinder with the PermGen settings.  nGrinder needs quite big perm-gen memory. Please run nGrinder with the following command.
&lt;pre&gt;&lt;code&gt;java -XX:MaxPermSize=200m -jar  ngrinder-controller-3.4.war
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;By default, nGrinder uses 8080 for web server port. If you want to use the other port, please assign --port port_number as a parameter.
&lt;pre&gt;&lt;code&gt;java -XX:MaxPermSize=200m -jar  ngrinder-controller-3.4.war --port 80
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;While executing the war file, the war will be extracted into ~/.ngrinder/webapp folder and creates several default data files like DBs into .ngrinder folder.&lt;/li&gt;
&lt;li&gt;If you can see the following logs in the screen, The ngridner controller is now ready to run.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;INFO 14. 1. 20 오후 4:39:liquibase: ChangeSet ngrinder_datachange_logfile/db.changelog_schema_22.xml::22::ngrinder.3.3 r
an successfully in 4ms

INFO 14. 1. 20 오후 4:39:liquibase: ChangeSet ngrinder_datachange_logfile/db.changelog_schema_23.xml::23::ngrinder.3.3 r
an successfully in 7ms

INFO 14. 1. 20 오후 4:39:liquibase: ChangeSet ngrinder_datachange_logfile/db.changelog_schema_24.xml::24::ngrinder.3.3 r
an successfully in 2ms

INFO 14. 1. 20 오후 4:39:liquibase: ChangeSet ngrinder_datachange_logfile/db.changelog_schema_25.xml::25::ngrinder.3.3 r
an successfully in 7ms

INFO 14. 1. 20 오후 4:39:liquibase: ChangeSet ngrinder_datachange_logfile/db.changelog_schema_26.xml::26::ngrinder.3.3 r
an successfully in 8ms

2014-01-20 16:39:30.633:INFO:/:Initializing Spring FrameworkServlet &#39;appServlet&#39;

2014-01-20 16:39:31.141:INFO::Started SocketConnector@@0.0.0.0:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;Then open the browser and go to &lt;a href=&quot;http://localhost:8080/&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-run-on-tomcat&quot; class=&quot;anchor&quot; href=&quot;#run-on-tomcat&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run on Tomcat&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Put the war file in the tomcat’s webapps folder ${TOMCAT_HOME}/webapps . If you want to access the ngrinder without the ngrinder-controller context path, you should change the war file name as ROOT.war.&lt;/li&gt;
&lt;li&gt;Then open in catalina.sh or catalina.bat and put the following line in the head of the file.
&lt;pre&gt;&lt;code&gt;JAVA_OPTS=&quot;-Xms600m -Xmx1024m -XX:MaxPermSize=200m&quot;    # for catalina.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;set JAVA_OPTS=-Xms600m -Xmx1024m -XX:MaxPermSize=200m   # for catalina.bat
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Then run ${TOMCAT_HOME}/startup.sh or startup.bat&lt;/li&gt;
&lt;li&gt;Open the browser and go to &lt;a href=&quot;http://localhost:8080/ngrinder-controller-X.X&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/ngrinder-controller-X.X&lt;/a&gt; or &lt;a href=&quot;http://localhost:8080&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080&lt;/a&gt; if you changed the war file name to ROOT.war&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-more&quot; class=&quot;anchor&quot; href=&quot;#more&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;nGrinder supports multiple regions(runnging separate sets of agents belong to the multiple network zone) by clustering multiple controllers. See [Controller Clustering Guide]
.&lt;/li&gt;
&lt;li&gt;There are many configurable options which make nGrinder customized for each needs. See [Controller Configuration Guide].&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-install-agents&quot; class=&quot;anchor&quot; href=&quot;#install-agents&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Agents&lt;/h3&gt;
&lt;p&gt;Not like previous nGrinder, nGrinder 3.3 agents is downloaded from the controller. The downloaded agent package already contains the default agent configuration connecting to the controller from which the agent is downloaded.
So just unpacking the tar file and running “run_agent.sh” or “run_agent.bat” make the agent connect to the controller.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Log in as admin. The default admin password is admin as well.
&lt;img src=&quot;assets/Installation-Guide-8b049.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the top-right menu and click the Download Agent menu.
&lt;img src=&quot;assets/Installation-Guide-262d2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because you’re logged in as admin, the downloadable agent package contains the configurations which let the agents shared by all user.&lt;br&gt;
If you logged in as not admin account, the link is changed to “Download Private Agent” containing the configurations which let the agents only occupied by the current user.&lt;br&gt;
See Private Agent for details.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The tar archive which contains agent will be downloaded soon.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tar file can be extracted using 7zip in Windows or tar xvf tar_file.tar command.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then untar the archive and run run_agent.sh or run_agent.bat. the agent will be executed using following logic.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Check the ~/.ngrinder_agent folder and see the configuration(agent.conf) is there&lt;/li&gt;
&lt;li&gt;If it does not exist, copy the current folder’s __agent.conf file into ~/.ngrinder_agent/agent.conf and load it.&lt;/li&gt;
&lt;li&gt;If it exists, just run with existing configuration in ~/.ngrinder_agent/agent.conf.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you like to overwrite the existing configuration with the latest configuration, please put ‘-o‘ option as a parameter&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;run_agent.sh -o # for linux / mac

run_agent_bg.sh -o # If you want to run it in the background for linux / mac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;run_agent.bat –o # for windows
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to stop the agent.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stop_agent.sh # for linux / mac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stop_agent.bat # for windows
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From nGrinder 3.3, the connected agent is automatically approved by controller. However, if you provided&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;controller.enable_agent_auto_approval=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;configuration in the controller configuration, You have to approve agents by yourself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To approve agents, go to Agent Management menu and click the approve button.
&lt;img src=&quot;assets/Installation-Guide-aef57.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you run an agent in Linux, you may need to configure ulimit to run many threads. please check followings.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; ulimit -a

core file size          (blocks, -c) 0

data seg size           (kbytes, -d) unlimited

scheduling priority             (-e) 0

file size               (blocks, -f) unlimited

pending signals                 (-i) 30676

max locked memory       (kbytes, -l) 64

max memory size         (kbytes, -m) unlimited


open files                      (-n) 16000

pipe size            (512 bytes, -p) 8

POSIX message queues     (bytes, -q) 819200

real-time priority              (-r) 0

stack size              (kbytes, -s) 10240

cpu time               (seconds, -t) unlimited

max user processes              (-u) 32768

virtual memory          (kbytes, -v) unlimited

file locks                      (-x) unlimited
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If your machine has small &quot;max user processes&quot; and &quot;open files&quot; entry when you run &quot;ulimit -a&quot;, please make it at least over 10000. Open /etc/security/limits.conf file in the root account and add followings.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;your_account soft    nproc           32768

your_account hard    nproc           32768

root         soft    nproc           32768

root         hard    nproc           32768

your_account soft    nofile          16000

your_account hard    nofile          16000

root         soft    nofile          16000

root         hard    nofile          16000
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;By default, the only one agent per machine is supported. However, if you want to run multiple agents in a single machine, you have to configure some agent option. Please refer &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Agent-Configuration-Guide&quot;&gt;Agent Configuration Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-install-monitor&quot; class=&quot;anchor&quot; href=&quot;#install-monitor&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Monitor&lt;/h3&gt;
&lt;p&gt;nGrinder Monitor is the subset of the agent package and is installed into target machine to collect system statistics(such as CPU, MEM and Network) under the loads.&lt;br&gt;
You can download monitors from the controller as well.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the monitor.&lt;br&gt;
&lt;img src=&quot;assets/Installation-Guide-96872.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then untar the monitor package and run the batch or shell files.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;run_monitor_bg.sh  # for linux / mac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;run_monitor.bat # for windows
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to stop the monitor, run following commands.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stop_monitor.sh # for linux / mac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stop_monitor.bat –o # for windows
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OK. Now you&#39;re ready to run the first performance test. Go to &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Quick-Start&quot;&gt;Quick Start&lt;/a&gt;&lt;/p&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/REST-API-PerfTest/d707e8481f2bf25d5b7a45233621c681974706bd</id>
        <published>2017-11-13T14:33:50+05:30</published>
        <updated>2017-11-13T14:33:50+05:30</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/REST-API-PerfTest"/>
        <media:thumbnail url="https://avatars3.githubusercontent.com/u/3639797?s=60&amp;v=4"/>
        <author>
          <name>vipinvkmenon</name>
        </author>
        <content type="html">
          &lt;h3&gt;
&lt;a id=&quot;user-content-apis&quot; class=&quot;anchor&quot; href=&quot;#apis&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;APIs&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Param / Desc / Required / Default&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;page / Page Number / N / 1&lt;br&gt;size / Page Size / N / 1&lt;/td&gt;
&lt;td&gt;Get the list of perf test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;Refer PerfTest model.&lt;/td&gt;
&lt;td&gt;Create a perf test.&lt;br&gt;If you don’t provide much of perftest model parameter, they will be set as default value or emit the error.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Get the perf test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}&lt;/td&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;Refer PerfTest model.&lt;/td&gt;
&lt;td&gt;Update the perf test. Partial update is supported.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}?action=status&lt;/td&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;status / Status / Y / -&lt;/td&gt;
&lt;td&gt;Update the status&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}?action=stop&lt;/td&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Stop the perf test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}&lt;/td&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Delete the perf test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api?action=stop&lt;/td&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;ids / comma separated id list / Y / “”&lt;/td&gt;
&lt;td&gt;Stop the perf tests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api&lt;/td&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;ids / comma separated id list / Y / “”&lt;/td&gt;
&lt;td&gt;Delete the perf tests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/{id}/api/sample&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Get the sampling data for given tests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/status&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;ids / comma separated id list / Y / “”&lt;/td&gt;
&lt;td&gt;Get the status list for given tests&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/script&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Get the available  script list.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/resource&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;scriptPath / script path&lt;/td&gt;
&lt;td&gt;Get the resource list for the given script.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}/status&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Get the status of the given test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}/logs&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Get the log file names of the given test&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}/perf&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;dataType/ comma separated data type key / Y / - &lt;br&gt;onlyTotal / total only? / N / false&lt;br&gt;imgWidth /  image width / Y / -&lt;/td&gt;
&lt;td&gt;Get the perftest graph data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}/monitor&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;targetIP / test target IP / Y / - &lt;br&gt;imgWidth /  image width / Y / -&lt;/td&gt;
&lt;td&gt;Get the monitor graph data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}/plugin/{plugin}&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;imgWidth /  image width / Y / -&lt;/td&gt;
&lt;td&gt;Get the plugin graph data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest/api/{id}/clone_and_start&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;Refer PerfTest model&lt;/td&gt;
&lt;td&gt;clone the given test and start&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-models&quot; class=&quot;anchor&quot; href=&quot;#models&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Models&lt;/h3&gt;
&lt;p&gt;PerfTest&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;param&lt;/th&gt;
&lt;th&gt;Default Value&lt;/th&gt;
&lt;th&gt;Avaliable value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;testName&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;test name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tagString&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;comma separated tag list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;test description&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;status&lt;/td&gt;
&lt;td&gt;SAVED&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;test status. Refer the Status model. Just SAVED / READY can be set by REST API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scheduledTime&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Test schedule. If not provided, which means &quot;run now&quot;.&lt;br&gt;it should have &quot;Tue Jan 28 2014 22:18:00 GMT+0900&quot; style value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;useRampUp&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true / false&lt;/td&gt;
&lt;td&gt;Use rampup?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rampUpType&lt;/td&gt;
&lt;td&gt;PROCESS&lt;/td&gt;
&lt;td&gt;PROCESS / THREAD&lt;/td&gt;
&lt;td&gt;Ramp up type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;threshold&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;D / R&lt;/td&gt;
&lt;td&gt;Use duration (D) or use run time(R)?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scriptName&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Script path&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;duration&lt;/td&gt;
&lt;td&gt;60000&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Duration in the unit of millisecond&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;runCount&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Run count&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agentCount&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;The count of agents&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vuserPerAgent&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;The count of vusers per agent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;processes&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;The count of processes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;threads&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;The count of threads&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;samplingInterval&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;The sampling interval&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ignoreSampleCount&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;Sampling&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;param&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Test param&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;safeDistribution&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true / false&lt;/td&gt;
&lt;td&gt;Safe distribution?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rampUpInitCount&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;The initial count of rampup process/threads&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rampUpInitSleepTime&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;The initial sleep time during rampup&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rampUpStep&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Ramp up step&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rampUpIncrementInterval&lt;/td&gt;
&lt;td&gt;1000&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Ramp up interval&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;testComment&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Test Comment&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-status&quot; class=&quot;anchor&quot; href=&quot;#status&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Status Description.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SAVED&lt;/td&gt;
&lt;td&gt;Saved but not ready to test.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;READY&lt;/td&gt;
&lt;td&gt;Ready to test. If the test is ready, it wil be executed soon&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;START_CONSOLE&lt;/td&gt;
&lt;td&gt;Below status are automatically tranfered from one to other  by controller.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;START_CONSOLE_FINISHED&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;START_AGENTS&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;START_AGENTS_FINISHED&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DISTRIBUTE_FILES&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DISTRIBUTE_FILES_FINISHED&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;START_TESTING&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TESTING&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TESTING_FINISHED&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ABNORMAL_TESTING&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FINISHED&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;STOP_BY_ERROR&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CANCELED&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UNKNOWN&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/How-to-bind-native-libraries/17b3256a3841f77ddf2cf146c9dfd733482400bf</id>
        <published>2017-05-27T00:09:26+09:00</published>
        <updated>2017-05-27T00:09:26+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/How-to-bind-native-libraries"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/18255953?s=60&amp;v=4"/>
        <author>
          <name>hyunjongL</name>
        </author>
        <content type="html">
          &lt;p&gt;Some companies(especially game company) uses C/C++ more than java. They uses the native libraries for communication between clients and servers.&lt;br&gt;
They don’t know Java much which nGrinder is built on and want to reuse existing their native asset as much as possible.&lt;br&gt;
nGrinder has been shipped with JNA which enables java and native libraries(so, jar) binding. Therefore users can use DLL or SO files in their scripts.&lt;/p&gt;
&lt;p&gt;The followings describes the step necessary to run so or dlls with nGrinder.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Prepare the DLLs or SOs which defines the simple functions which can be easily bridged to Java.&lt;br&gt;
Methods with no parameter is pefered. If you want to pass the parameter from nGrinder script to DLLs or SOs, please make the parameter type simple as much as possible like char* or int.&lt;/li&gt;
&lt;li&gt;Upload the created DLLs or SOs into lib folder. If you will define the script in the helloworld/TestRunner.groovy, you should upload those native libraries in the helloworld/lib/ folder.&lt;/li&gt;
&lt;li&gt;Write the test script using JNA binding. Following show the simple binding between the groovy script and native lib named “dmclient”&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.ngrinder&lt;/span&gt;;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; import JNA&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;com.sun.jna.Library&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;com.sun.jna.Native&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;import static&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.script.Grinder.grinder&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.plugin.http.HTTPRequest&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.plugin.http.HTTPPluginControl&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.script.GTest&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.script.Grinder&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.scriptengine.groovy.junit.GrinderRunner&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.scriptengine.groovy.junit.annotation.BeforeThread&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; import static net.grinder.util.GrinderUtils.* // You can use this if you&#39;re using nGrinder after 3.2.3&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.junit.Before&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.junit.BeforeClass&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.junit.Test&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.junit.runner.RunWith&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;HTTPClient.HTTPResponse&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;HTTPClient.NVPair&lt;/span&gt;



&lt;span class=&quot;pl-k&quot;&gt;@RunWith&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;GrinderRunner&lt;/span&gt;)
&lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;TestRunner&lt;/span&gt; {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Define the interface which native library has.&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;NativeClient&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;Library&lt;/span&gt; {
        &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;connect&lt;/span&gt;(  )
    }

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;GTest&lt;/span&gt; test
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HTTPRequest&lt;/span&gt; request

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; nativeClient;
    &lt;span class=&quot;pl-k&quot;&gt;@BeforeProcess&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;beforeProcess&lt;/span&gt;() {
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; load &#39;native_client.so or native_client.dll with interface NativeClient&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;(File extension(so or dll) is depending on agent&#39;s OS)&lt;/span&gt;
        nativeClient &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;Native&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;loadLibrary( &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&#39;&lt;/span&gt;native_client&lt;span class=&quot;pl-pds&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-k&quot;&gt;NativeClient&lt;/span&gt;);
        test &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;GTest&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Test1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class=&quot;pl-k&quot;&gt;@BeforeThread&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;beforeThread&lt;/span&gt;() {
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statistics&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;delayReports&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;;
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Record the current test instances method &quot;doTest&quot;&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; because the nativeClient instance is not recordable because it&#39;s the native method.&lt;/span&gt;
        test&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;record(&lt;span class=&quot;pl-c1&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;doTest&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    }

    &lt;span class=&quot;pl-k&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;test&lt;/span&gt;(){
        doTest()
    }

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;doTest&lt;/span&gt;() {
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Call the native library&#39;s methods.&lt;/span&gt;
        nativeClient&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;connect();
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Then run the test.&lt;br&gt;
Please be aware that you should run the SOs or DLLs in the machines which contains same library version(e.x. GLIBC) when you developed those.&lt;/li&gt;
&lt;/ol&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/User-Sign-Up/123f760c7df55f353bdb1a99daf2d2752165555e</id>
        <published>2017-05-27T00:06:27+09:00</published>
        <updated>2017-05-27T00:06:27+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/User-Sign-Up"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/18255953?s=60&amp;v=4"/>
        <author>
          <name>hyunjongL</name>
        </author>
        <content type="html">
          &lt;blockquote&gt;
&lt;p&gt;This tutorial describes how to enable the user sign up which is introduced from nGrinder 3.3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;nGrinder is the web application. In our company(Naver), more than 1000 users has been registered in the single nGrinder instance and we’ve developed SSO plugin to avoid the user management overhead. So any users here can access nGrinder without any user registration step. However, if there are less than 100 possible users and the controller is located in the intranet, developing such a plugin might be the overhead. However it still makes the administration overhead. The admin should create the new user whenever some guy wants to use nGrinder. Therefore nGrinder 3.3 introduced “User Sign Up” feature for users to register themselves into nGrinder. By default, this feature is disabled because nGrinder is risky due to heavy loads on the network and there are possiblity which careless users can make mistakes. When enabling the “User Sign Up” feature, the admin should be aware of the consequent effect.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-enabling-sign-up&quot; class=&quot;anchor&quot; href=&quot;#enabling-sign-up&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling Sign Up&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Log in as admin and go to “System Configuration”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Put the following option in the configuration editor.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;controller.allow_sign_up=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;assets/User-Sign-Up-a0abd.png&quot; alt=&quot;&quot;&gt;
If you want to get the user email and mobile phone number when new users sign up. Please put the following as well.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;controller.user_security=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If it’s false, the users can register themselves without the email and mobile phone number.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Log out and check if there is “Sign Up” link in the login page.&lt;br&gt;
&lt;img src=&quot;assets/User-Sign-Up-4f74a.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-sign-up&quot; class=&quot;anchor&quot; href=&quot;#sign-up&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sign Up&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;If the admin enabled the sign up, The user can register him/herself by clicking the sign up button in the login page.&lt;/li&gt;
&lt;li&gt;After clicking this button, fill up the user sign up form.&lt;br&gt;
&lt;img src=&quot;assets/User-Sign-Up-9be91.png&quot; alt=&quot;&quot;&gt;
&lt;/li&gt;
&lt;li&gt;After clicking the “Save User” button, the user can login with the created user account.&lt;/li&gt;
&lt;/ol&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Easy-Clustering-Guide/197f7d8097b0dc188893e5e9c6b8eb3628f82c00</id>
        <published>2017-05-27T00:05:16+09:00</published>
        <updated>2017-05-27T00:05:16+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Easy-Clustering-Guide"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/18255953?s=60&amp;v=4"/>
        <author>
          <name>hyunjongL</name>
        </author>
        <content type="html">
          &lt;p&gt;From nGrinder 3.3, nGrinder support &quot;easy&quot; clustering mode which let multiple controllers run in a single machine. Because they runs in a single machine, no  network file system for ${NGRINDER_HOME} is not necessary. The running controllers will work with local ${NGRINDER_HOME}. Please follow the steps below.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-run-h2-tcp-server&quot; class=&quot;anchor&quot; href=&quot;#run-h2-tcp-server&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run H2 TCP Server&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download H2 and unzip it.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.h2database.com/h2-2014-01-18.zip&quot; rel=&quot;nofollow&quot;&gt;http://www.h2database.com/h2-2014-01-18.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run H2 TCP Server
&lt;ul&gt;
&lt;li&gt;bin\h2.bat or bin/h2.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-run-controllers&quot; class=&quot;anchor&quot; href=&quot;#run-controllers&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Controllers&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Run controllers pointing different web(-p)/cluster(-clp)/controller(-cp) port and region name(-r). If they&#39;re over-wrapped,  the controllers fail to run due to the port conflict.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;java -jar -XX:MaxPermSize=200m -jar ngrinder-controller-X.X.war -p 8080 -cm easy -clp 10010 -r region1 -cp 9001      

java -jar -XX:MaxPermSize=200m -jar ngrinder-controller-X.X.war -p 8081 -cm easy -clp 10011 -r region2 -cp 9002       

java -jar -XX:MaxPermSize=200m -jar ngrinder-controller-X.X.war -p 8082 -cm easy -clp 10012 -r region3 -cp 9003       
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;For the CLI options, see &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Controller-Configuration-Guide&quot;&gt;Controller Configuration Guide&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Visit one of the web port and login
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;And check the region is activated and all regions are up.&lt;br&gt;
&lt;img src=&quot;assets/Easy-Clustering-Guide-2a7a5.png&quot; alt=&quot;&quot;&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-run-agents&quot; class=&quot;anchor&quot; href=&quot;#run-agents&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run Agents&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;You can download and run the agent for each region. Just click the Download Agent &amp;gt; region Name like the above picture.&lt;br&gt;
This will download the agent which is already configured to the region you specified.&lt;/li&gt;
&lt;li&gt;untar  the agent in the separate machine.&lt;/li&gt;
&lt;li&gt;Then run run_agent.sh -o or run_agent.bat -o&lt;/li&gt;
&lt;li&gt;If you want to run multiple agents in a single machine, see &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Agent-Configuration-Guide&quot;&gt;Agent Configuration Guide&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Using-nGrinder-to-perform-DB-load-test/75a1ff2b554798d4c708f9e8f427c8db00cd588a</id>
        <published>2017-02-13T16:39:27+08:00</published>
        <updated>2017-02-13T16:39:27+08:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Using-nGrinder-to-perform-DB-load-test"/>
        <media:thumbnail url="https://avatars3.githubusercontent.com/u/19711579?s=60&amp;v=4"/>
        <author>
          <name>wulaxiaohei</name>
        </author>
        <content type="html">
          &lt;p&gt;One of the superiority of nGrinder is extensibility with java library in python. Because agent will execute the python script in jython, we can directly import java library in our test script. And here is the example to use jdbc library to perfoem DB load test.&lt;/p&gt;
&lt;p&gt;Create jdbc test script:&lt;/p&gt;
&lt;p&gt;Open the script list page and click “Create a script”:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Using-nGrinder-to-perform-DB-load-test-5fd34.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Enter a name and select the checkbox to create lib directory. If you didn’t select it, you can also create the lib directory yourself.&lt;/p&gt;
&lt;p&gt;After that, you can get a script based on a simple http test template. Then you can modify the script as below:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; -*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Database test.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; java.sql &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; DriverManager
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; net.grinder.script.Grinder &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; grinder
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; net.grinder.script &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; Test
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; cubrid.jdbc.driver &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; CUBRIDDriver
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; java.util &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; Random
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; java.lang &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; System

test1 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Test(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Database insert&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
test2 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Test(&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Database update&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
random &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Random(&lt;span class=&quot;pl-v&quot;&gt;long&lt;/span&gt;(System.nanoTime()))

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Load the JDBC driver.&lt;/span&gt;
DriverManager.registerDriver(CUBRIDDriver())

&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getConnection&lt;/span&gt;():
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; DriverManager.getConnection(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;jdbc:CUBRID:localhost:33000:ngrinder_cluster:::?charset=utf-8&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)

&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;ensureClosed&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;object&lt;/span&gt;):
    &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;object&lt;/span&gt;.close()
    &lt;span class=&quot;pl-k&quot;&gt;except&lt;/span&gt;: &lt;span class=&quot;pl-k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; One time initialization that cleans out old data.&lt;/span&gt;
connection &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; getConnection()
statement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; connection.createStatement()
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; initialize the table should want to test.&lt;/span&gt;
statement.execute(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;drop table if exists ngrinder_update_temp&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
statement.execute(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;create table ngrinder_update_temp(testid integer, test_number integer)&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)

ensureClosed(statement)
ensureClosed(connection)

&lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;TestRunner&lt;/span&gt;:
    &lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;__call__&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;self&lt;/span&gt;&lt;/span&gt;):
        connection &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;
        updateStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;
        insertStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt;:
            &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; in this test, we will create connection and statement in every test transaction.&lt;/span&gt;
            connection &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; getConnection()
            updateStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; connection.createStatement()
            insertStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; connection.createStatement()
            insertStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; test1.wrap(insertStatement)
            tmpId &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; random.nextInt(&lt;span class=&quot;pl-c1&quot;&gt;1024000&lt;/span&gt;)
            insertStatement.execute(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;insert into ngrinder_update_temp values(&lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt;)&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;%&lt;/span&gt;
                        (tmpId, random.nextInt(&lt;span class=&quot;pl-c1&quot;&gt;1024000&lt;/span&gt;)))
            updateStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; test2.wrap(updateStatement)
            updateStatement.execute(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;update ngrinder_update_temp set test_number=&lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt; where testid=&lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;%&lt;/span&gt;
                        (random.nextInt(&lt;span class=&quot;pl-c1&quot;&gt;1024000&lt;/span&gt;), tmpId))
        &lt;span class=&quot;pl-k&quot;&gt;finally&lt;/span&gt;:
            ensureClosed(updateStatement)
            ensureClosed(insertStatement)
            ensureClosed(connection)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can click “Validate script” button to validate the syntex of the script. Be careful that the python needs some format requirement for indentation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTICE:&lt;/strong&gt;&lt;br&gt;
Don’t forget to save the script, because it will not be saved during validating.&lt;/p&gt;
&lt;p&gt;If there is no syntex error, then you will have an error about the driver can not be found. Then we need to upload the jdbc library into the “lib” directory. Open the script list page, and go into the lib directory. Click “Upload script or resources”:&lt;br&gt;
&lt;img src=&quot;assets/Using-nGrinder-to-perform-DB-load-test-c8d57.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
Select the jdbc driver of the DB you want to test and upload.&lt;br&gt;
&lt;img src=&quot;assets/Using-nGrinder-to-perform-DB-load-test-b0e69.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then go back to your script and validate again. If you get the message as below, it means the script and library has no problem.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2013-01-05 11:06:08,622 INFO  The Grinder version 3.9.1
2013-01-05 11:06:08,628 INFO  Java(TM) SE Runtime Environment 1.6.0_38-b05: Java HotSpot(TM) 64-Bit Server VM (20.13-b02, mixed mode) on Linux amd64 2.6.18-238.el5
2013-01-05 11:06:08,633 INFO  time zone is CST (+0800)
2013-01-05 11:06:08,749 INFO  worker process 0
2013-01-05 11:06:08,916 INFO  instrumentation agents: traditional Jython instrumenter; byte code transforming instrumenter for Java
2013-01-05 11:06:13,335 INFO  running &quot;jdbs-test.py&quot; using Jython 2.2.1
2013-01-05 11:06:13,358 INFO  starting, will do 1 run
2013-01-05 11:06:13,359 INFO  start time is 1357355173359 ms since Epoch
2013-01-05 11:06:13,410 INFO  finished 1 run
2013-01-05 11:06:13,412 INFO  elapsed time is 53 ms
2013-01-05 11:06:13,412 INFO  Final statistics for this process:
2013-01-05 11:06:13,423 INFO  
             Tests        Errors       Mean Test    Test Time    TPS          
                                       Time (ms)    Standard                  
                                                    Deviation                 
                                                    (ms)                      

Test 1       1            0            3.00         0.00         18.87         &quot;Database insert&quot;
Test 2       2            0            0.50         0.50         37.74         &quot;Database update&quot;

Totals       3            0            1.33         1.25         56.60        

  Tests resulting in error only contribute to the Errors column.          
  Statistics for individual tests can be found in the data file, including
  (possibly incomplete) statistics for erroneous tests. Composite tests   
  are marked with () and not included in the totals.                      



2013-01-05 11:06:13,347 INFO  validation-0: starting threads
2013-01-05 11:06:13,423 INFO  validation-0: finished
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then create a test with this script:&lt;br&gt;
&lt;img src=&quot;assets/Using-nGrinder-to-perform-DB-load-test-de2ba.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you have monitor installed on that DB server, you can also set the target server. Then you can get the monitor data during the test.&lt;/p&gt;
&lt;p&gt;When you select the script, the uploaded library should appear in resources area.&lt;/p&gt;
&lt;p&gt;Then you can check the test running and report.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Using-nGrinder-to-perform-DB-load-test-0cde5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Using-nGrinder-to-perform-DB-load-test-79cbf.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the test above, we create connection in every transaction, so the mean time of every running is about half second.&lt;/p&gt;
&lt;p&gt;Below is the test script and report if I get conenction at the beginning of the test and resue the connection. (I commentted some code about getting/closing connection in every transaction.)&lt;/p&gt;
&lt;h5&gt;
&lt;a id=&quot;user-content-jython&quot; class=&quot;anchor&quot; href=&quot;#jython&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jython&lt;/h5&gt;
&lt;div class=&quot;highlight highlight-source-python&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; -*- coding:utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Database test.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; java.sql &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; DriverManager
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; net.grinder.script.Grinder &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; grinder
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; net.grinder.script &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; Test
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; cubrid.jdbc.driver &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; CUBRIDDriver
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; java.util &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; Random
&lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; java.lang &lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; System

test1 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Test(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Database insert&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
test2 &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Test(&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Database update&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
random &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; Random(&lt;span class=&quot;pl-v&quot;&gt;long&lt;/span&gt;(System.nanoTime()))

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Load the JDBC driver.&lt;/span&gt;
DriverManager.registerDriver(CUBRIDDriver())

&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getConnection&lt;/span&gt;():
    &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; DriverManager.getConnection(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;jdbc:CUBRID:localhost:33000:ngrinder_cluster:::?charset=utf-8&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)

&lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;ensureClosed&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;object&lt;/span&gt;):
    &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;object&lt;/span&gt;.close()
    &lt;span class=&quot;pl-k&quot;&gt;except&lt;/span&gt;: &lt;span class=&quot;pl-k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; One time initialization that cleans out old data.&lt;/span&gt;

connection &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; getConnection()
statement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; connection.createStatement()
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; initialize the table should want to test.&lt;/span&gt;
statement.execute(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;drop table if exists ngrinder_update_temp&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
statement.execute(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;create table ngrinder_update_temp(testid integer, test_number integer)&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)

ensureClosed(statement)
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;ensureClosed(connection)&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;TestRunner&lt;/span&gt;:
    &lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;__call__&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;connection = None&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;updateStatement = None&lt;/span&gt;
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;insertStatement = None&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt;:
            &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; in this test, we will create connection and statement in every test transaction.&lt;/span&gt;
            &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; connection = getConnection()&lt;/span&gt;
            updateStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; connection.createStatement()
            insertStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; connection.createStatement()
            test1.record(insertStatement)
            tmpId &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; random.nextInt(&lt;span class=&quot;pl-c1&quot;&gt;1024000&lt;/span&gt;)
            insertStatement.execute(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;insert into ngrinder_update_temp values(&lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt;)&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;%&lt;/span&gt;
                        (tmpId, random.nextInt(&lt;span class=&quot;pl-c1&quot;&gt;1024000&lt;/span&gt;)))
            updateStatement &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; test2.wrap(updateStatement)
            updateStatement.execute(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;update ngrinder_update_temp set test_number=&lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt; where testid=&lt;span class=&quot;pl-c1&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;%&lt;/span&gt;
                        (random.nextInt(&lt;span class=&quot;pl-c1&quot;&gt;1024000&lt;/span&gt;), tmpId))
        &lt;span class=&quot;pl-k&quot;&gt;finally&lt;/span&gt;:
            ensureClosed(updateStatement)
            ensureClosed(insertStatement)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;
&lt;a id=&quot;user-content-groovy&quot; class=&quot;anchor&quot; href=&quot;#groovy&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Groovy&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;package org.ngrinder;

  import static net.grinder.script.Grinder.grinder
  import static org.junit.Assert.*
  import static org.hamcrest.Matchers.*
  import net.grinder.script.GTest
  import net.grinder.script.Grinder
  import net.grinder.scriptengine.groovy.junit.GrinderRunner
  import net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess
  import net.grinder.scriptengine.groovy.junit.annotation.BeforeThread

  import org.junit.Before
  import org.junit.BeforeClass
  import org.junit.Test
  import org.junit.runner.RunWith

  import groovy.sql.Sql

  /**
   * A simple example using the Groovy SQL that shows the retrieval of a
   * Simple query.
   */
  @RunWith(GrinderRunner)
  class TestRunner {
      public static GTest test
      public static sql

      @BeforeProcess
      public static void beforeProcess() {
          test = new GTest(1, &quot;Test1&quot;)
          sql = Sql.newInstance( &#39;connection_string&#39;, &#39;id&#39;, &#39;password&#39;, &#39;cubrid.jdbc.driver.CUBRIDDriver&#39; )
          test.record(sql);
          grinder.logger.info(&quot;before process.&quot;);
      }

      @BeforeThread
      public void beforeThread() {
          grinder.statistics.delayReports=true;
          grinder.logger.info(&quot;before thread.&quot;);
      }

      @Test
      public void test(){
          sql.eachRow( &#39;select * from code&#39; ) { println &quot;$it.s_name -- ${it.f_name} --&quot; }
      }
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/3c35640c183fb95d802ab51cd6e7ce6245a2e729/687474703a2f2f7777772e6375627269642e6f72672f66696c65732f6174746163682f696d616765732f3337393139392f3231332f3534342f696d6167655f7468756d625f392e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;http://www.cubrid.org/files/attach/images/379199/213/544/image_thumb_9.png&quot;&gt;&lt;/p&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/How-to-use-lib-and-resources/fcea4230f0785e0357f78bf54ada0996f0b3ec88</id>
        <published>2016-06-24T11:40:34+09:00</published>
        <updated>2016-06-24T11:39:03+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/How-to-use-lib-and-resources"/>
        <author>
          <name></name>
        </author>
        <content type="html">
          &lt;p&gt;Do you need to use your own jar or py? Read followings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/How-to-use-library&quot;&gt;How to use library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do you need to load your own xml or txt file? Read followings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/How-to-use-resources&quot;&gt;How to use resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/How-To-Build-nGrinder-from-scratch-using-Maven/f090dd457194b35a48a4e33e80caaac5dfce7d98</id>
        <published>2016-06-13T15:48:52+09:00</published>
        <updated>2016-06-13T15:48:52+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/How-To-Build-nGrinder-from-scratch-using-Maven"/>
        <author>
          <name></name>
        </author>
        <content type="html">
          &lt;p&gt;This document discusses how Maven can be used to build nGrinder. For the sake of simplicity, we are assuming this entire Configuration will be operated on Linux. First, JDK (version 7) or later, Git 1.7.8 and Maven 3.0.4 will be installed.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-1-clone-ngrinder-project-from-github&quot; class=&quot;anchor&quot; href=&quot;#1-clone-ngrinder-project-from-github&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Clone nGrinder Project from Github&lt;/h3&gt;
&lt;p&gt;just use the command to clone the nGrinder project from Github&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/naver/ngrinder.git
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/naver/ngrinder.git
Cloning into &#39;ngrinder&#39;...
remote: Counting objects: 26998,done.
remote: Compressing objects: 100% (10897/10897),done.
Receiving objects: 1% (364/26998), 76.00 KiB | 10 KiB/s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It may takes several minutes to do this.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls ngrinder/
docs docker ngrinder-core ngrinder-dns ngrinder-controller
README.md pom.xml release_note.txt ....
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Look ! nGrinder codes already in Local !&lt;/p&gt;
&lt;p&gt;and Run scripts for the dependent libraries download.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ngrinder

// linux user
$ install_maven_lib.sh

// windows user
$ install_maven_lib.bat
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I just need built over.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-2-build-ngrinder&quot; class=&quot;anchor&quot; href=&quot;#2-build-ngrinder&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Build nGrinder&lt;/h3&gt;
&lt;p&gt;Let`s start using Maven to build an nGrinder project. It is quite simple !
Just execute the following command in the ngrinder folder.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$mvn compile -Dmaven.test.skip=true

or

$mvnw compile -Dmaven.test.skip=true # when you don&#39;t have maven.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;-Dmaven.test.skip=true  Use this to skip the test case in order to save time.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;if want to generate war and jar files ,please use &lt;strong&gt;&quot;package&quot;&lt;/strong&gt; instead of &lt;strong&gt;&quot;compile&quot;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/How-To-Build-nGrinder-from-scratch-using-Maven-8020c.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Building nGrinder is complete!&lt;/p&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Dev-Document/42443e5007e2ff3e5d647f784bbd85d121456041</id>
        <published>2016-06-13T15:44:36+09:00</published>
        <updated>2016-06-13T15:42:54+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Dev-Document"/>
        <author>
          <name></name>
        </author>
        <content type="html">
          &lt;p&gt;This page contains nGrinder 3.0 related developer documents.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Vuser-Test-Result&quot;&gt;Vuser Test Result&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/naming-convention&quot;&gt;Naming Convention&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/How-To-Build-nGrinder-from-scratch-using-Maven&quot;&gt;How To Build nGrinder from scratch using Maven&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Java-Implementation-for-Google-Analytics-Measurement-Protocol&quot;&gt;Java Implementation for Google Analytics Measurement Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Coding-Convention&quot;&gt;Coding Convention&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/How-to-refer-nGrinder-Home&quot;&gt;How to refer nGrinder Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Spring-in-nGrinder&quot;&gt;Spring in nGrinder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/How-to-create-dynamic-queries-in-SpringData&quot;&gt;How to create dynamic queries in SpringData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/How-to-develop-plugin&quot;&gt;How to develop plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/nGrinder-test-execution-performance-test&quot;&gt;nGrinder test execution performance test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/nGrinder-git-branching%2C-version-policy&quot;&gt;nGrinder git branching, version policy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/3409b78c09cc580e08a8175ad3060d3e76d1f9f2</id>
        <published>2016-05-22T22:46:08+09:00</published>
        <updated>2016-05-22T22:46:08+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;&lt;img src=&quot;https://github.com/naver/ngrinder/wiki/assets/Home-ac3b2.png&quot; alt=&quot;logo&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;nGrinder&lt;/strong&gt; (pronounced as en-g-ra-in-der) is a stress tests platform that enables you to create test scripts, execute tests, monitor target servers and generate results simultaneously. The open-source nGrinder offers easy ways to conduct stress tests by eliminating inconveniences and providing integrated environments. It uses the renowned performance test tool, &lt;a href=&quot;http://grinder.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;The Grinder&lt;/a&gt;, as its internal engine.&lt;/p&gt;
&lt;p&gt;This is the tool developed by the service provider who really runs frequent load testing not by tool vendor. A breakthrough feature of nGrinder 3.X is support for concurrent tests which means that multiple users can run different tests at the same time! And it&#39;s cloud friendly and has attractive interface !&lt;/p&gt;
&lt;p&gt;nGrinder is being developed by Naver Business Platform and NHN China together.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Architecture&quot;&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Screen-Shot&quot;&gt;Screen Shot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Guide&quot;&gt;Guide&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Getting-Started&quot;&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Admin-Guide&quot;&gt;Admin Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/User-Guide&quot;&gt;User Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Scripting-Guide&quot;&gt;Scripting Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Script-Collection&quot;&gt;Script Collection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Dev-Document&quot;&gt;Dev Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Frequently-Asked-Question&quot;&gt;Frequently Asked Question&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Agent-Auto-Update/983ff572057f67b2718d5f6c1ed44c6487b7c3ea</id>
        <published>2016-05-22T22:44:57+09:00</published>
        <updated>2016-05-22T22:44:57+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Agent-Auto-Update"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;blockquote&gt;
&lt;p&gt;From nGrinder 3.3, the agent is self-updatable by the controller’s update command. This guide shows how to update agents.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you’re using nGrinder 3.3 or later controller and agent, you don’t need to open the telnet client to the each agent machine when you need to update the agent into newer version. Just follow the step below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Just go to the agent management page. You can see the attached agent list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the agents to be updated and click “Update” button. The ball on the left side will be blicked while the updating is being progressed.&lt;br&gt;
&lt;img src=&quot;assets/Agent-Auto-Update-b3754.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then the update will be finished about 20~40 seconds after. Please make sure that your agent status READY again.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Agent-Auto-Update-41587.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The agent update is workable only when following constraints are met.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Only one agent runs per a machine.&lt;br&gt;
When you have run more than two agents using same agent command in a single machine, the update command will affect the both agents. It makes the update processing confused.&lt;br&gt;
To avoid this, you should click update button for each agent sequentially or install the agent in the different folder in a single machine.&lt;/li&gt;
&lt;li&gt;The controller version should be higher than the agent version.&lt;br&gt;
The agent will ignore the update command if the previous version is sent. So always make sure that your controller is the later version.&lt;/li&gt;
&lt;li&gt;The version of already installed agent should be 3.3 or later.&lt;br&gt;
The agent before 3.3 version will not be updated. You should re-install such agents by yourself.&lt;/li&gt;
&lt;/ol&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Admin-Guide/bb8eeddb3952bc2f675ba1b8a2dcc3ea3ce18b6e</id>
        <published>2016-05-22T22:43:35+09:00</published>
        <updated>2016-05-22T22:43:35+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Admin-Guide"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;This page provides the collection of nGrinder administrative guides.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Installation-Guide&quot;&gt;Installation Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/General-Administration-Guide&quot;&gt;General Administration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Controller-Configuration-Guide&quot;&gt;Controller Configuration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Easy-Clustering-Guide&quot;&gt;Easy Clustering Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Advanced-Clustering-Guide&quot;&gt;Advanced Clustering Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Agent-Configuration-Guide&quot;&gt;Agent Configuration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Agent-Auto-Update&quot;&gt;Agent Auto Update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Private-Agent&quot;&gt;Private Agent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/User-Sign-Up&quot;&gt;User Sign Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/REST-API&quot;&gt;REST API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Script-Security&quot;&gt;Script Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Advanced-Clustering-Guide/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Advanced-Clustering-Guide"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;This feature is available from 3.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;This explain the advanced cluster configuration requiring NFS and Cubrid.&lt;/li&gt;
&lt;li&gt;If you want to run cluster without much effort, see &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Easy-Clustering-Guide&quot;&gt;Easy Clustering Guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We enhanced nGrinder to support clustering from 3.1.&lt;/p&gt;
&lt;p&gt;If you don’t know about nGrinder cluster, please refer to &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Cluster-Architecture&quot;&gt;Cluster Architecture&lt;/a&gt; Following shows how to set up nGrinder cluster mode. Assuming you have been familiar with nGrinder in single instance mode. All nGrinder controllers should use the same DB and file system in cluster mode. What we should do at first is to make a shared folder on the NFS and make all controllers point this as ${NGRINDER_HOME}. And edit ${NGRINDER_HOME}/system.conf like followings.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# if you want to enable ngrinder controller clustering. please enable below.
ngrinder.cluster.mode=true

# list of controller IPs
ngrinder.cluster.uris=xx.xx.xx.xx;xx.xx.xx.xx

# cache cluster listener port.
ngrinder.cluster.listener.port=40003
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next step is to create the each controller&#39;s specific information. For this ${NGRINDER_EX_HOME}/system-ex.conf file is used. Not like ${NGRINDER_HOME}, ${NGRINDER_EX_HOME} is not automatically created by nGrinder. Therefore you should make it in the local file system not to be shared by other controller. Create ${NGRINDER_EX_HOME}/system-ex.conf file and specify the region name here. The controller which reads this configuration will act as specified region controller.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Region setting of this controller.
# When running nGrinder in cluster mode, the ${NGRINDER_HOME} should be shared by other controllers.
# We expect this to be done by running ${NGRINDER_HOME} on NFS.
# However region setting can not be set on ${NGRINDER_HOME} because each controller in cluster must have its own configuration.
# Therefore, nGrinder supports one more configuration store folder ${NGRINDER_EX_HOME}
# Please locate following setting in the ${NGRINDER_EX_HOME}(by default ${user.home}/.ngrinder_ex)/system-ex.conf
ngrinder.cluster.region=Beijing
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After finish this configuration, just restart all nGrinder controllers and login again. We will see this icon at headline!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Advanced-Clustering-Guide-566c7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you want to put the L4 or load balancer in front of all controllers, you should set it up as sticky session so that each client connects only one controller. Otherwise, users may login again whenever they access difference controller.&lt;/p&gt;
&lt;p&gt;After the controller configuration, you should also set the region name to all agents. As you should know, we should set the connecting controller IP  in each agents. Now there are several controllers. So you should choose one of them depending on what region you want this agent to serve for. You need to add the not only connecting controller IP but also region name this controller handles.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;agent.console.ip=controller ip&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;agent.console.port= controller port&lt;/li&gt;
&lt;li&gt;agent.region=controller region name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If this agent is User Agent, it should be like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;agent.console.ip=controller ip&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;agent.console.port= controller port&lt;/li&gt;
&lt;li&gt;agent.region={controller region name}&lt;em&gt;owned&lt;/em&gt;{userID}&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Agent-Configuration-Guide/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Agent-Configuration-Guide"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;This chapter describes the advanced nGrinder agent configuration for nGrinder 3.3 or later. You may not need to read this guide if you run nGrinder for personal use. However if you want to run nGrinder as PAAS, you should read this chapter.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-agent-download-from-controller&quot; class=&quot;anchor&quot; href=&quot;#agent-download-from-controller&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Agent Download from Controller&lt;/h3&gt;
&lt;p&gt;from nGrinder 3.3, the agent packages are not distibuted from sourceforge. But it can be downloaded from the controller. This made big changes in agent configurations. The controller already knows how agents should be configured, it provides the agent package containning the appropriate configuration. For example when the admin user downloads an agent, the agent package contain the generic configurations. However if the general user downloads the package, the package will contain &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Private-Agent&quot;&gt;private agent&lt;/a&gt; configuration.&lt;/p&gt;
&lt;p&gt;See &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Installation-Guide&quot;&gt;Installation Guide&lt;/a&gt; to how to download the agent in the web browser.&lt;/p&gt;
&lt;p&gt;If you prefer to download agents using wget, you can use following URLs directly as well.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;controller mode?&lt;/th&gt;
&lt;th&gt;shared?&lt;/th&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;single&lt;/td&gt;
&lt;td&gt;shared&lt;/td&gt;
&lt;td&gt;http://{controller_host_name}/agent/download&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;http://{controller_host_name}/agent/download?owner={user_id}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster&lt;/td&gt;
&lt;td&gt;generic&lt;/td&gt;
&lt;td&gt;http://{controller_host_name}/agent/download?region={region_name}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;http://{controller_host_name}/agent/download/{region_name}/{user_id}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you installed clustered controllers in the helloworld.com and want to download private agent for “hello” user and “region1” region, you can download it using following URL.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://helloworld.com/agent/download/region1/hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you don’t like to composite URL, just copy the link in the browser and paste it.&lt;/p&gt;
&lt;p&gt;The The pre-setup configuration are stored as &#39;&#39;&#39;./__agent.conf&#39;&#39;&#39; file in the agent package. When the agent starts up, this __agent.conf file will be copied into the ${NGRINDER_AGENT_HOME}/agent.conf if this file does not exists. If there is already ${NGRINDER_AGENT_HOME}/agent.conf, agent will only show the warning message and skip the copy action. Then it will be executed with the preivous agent.conf.&lt;/p&gt;
&lt;p&gt;If you like to always overwirte the existing agent.conf with __agent.conf, you should run an agent with –o option which forces to overwrite the agent.conf. See agent&#39;s &lt;a href=&quot;#command-line-options&quot;&gt;Command Line Options&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-agent-start--stop&quot; class=&quot;anchor&quot; href=&quot;#agent-start--stop&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Agent Start / Stop&lt;/h3&gt;
&lt;p&gt;nGrinder agent has several command line shells. You can run one of them to invoke or kill the agent process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;run_agent.sh or run_agent.bat
&lt;ul&gt;
&lt;li&gt;use this to start the agent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;run_agent_bg.sh
&lt;ul&gt;
&lt;li&gt;use this to start the agent in the backgroud in linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;stop_agent.sh or stop_agent.bat
&lt;ul&gt;
&lt;li&gt;use this to stop the currently running agent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-agent-home&quot; class=&quot;anchor&quot; href=&quot;#agent-home&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Agent Home&lt;/h3&gt;
&lt;p&gt;When an agent starts, it will create ${user.home}/.ngrinder_agent directory into user’s home directory. this directory contains the default configuration files and data. The following is .ngrinder_agent folder&#39;s default location.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Window   : C:\Users${user.home}.ngrinder_agent&lt;/li&gt;
&lt;li&gt;Unix/Linux :${user.home}/.ngrinder_agent
But if you like to assign the other directory for the home directory, please set Environment Variable ${NGRINDER_AGENT_HOME}  before running an agent or you can provide &quot;--ngrinder-agent-home NGRINDER_AGENT_HOME” or “-nah NGRINDER_AGENT_HOME&quot; in the command line.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;./run_agent.sh --ngrinder-agent-home /home/user/ngrinder_agent
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-running-multipe-agents-in-a-single-machine&quot; class=&quot;anchor&quot; href=&quot;#running-multipe-agents-in-a-single-machine&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running multipe agents in a single machine&lt;/h3&gt;
&lt;p&gt;If you like to run multiple agents in a single machine, you should run agents under the below constaints.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Each agent should run with &lt;strong&gt;the different binary location&lt;/strong&gt;. When updating agent by controller, the each agent get the updated packageand try to replace current binary, When more than two agent instance from a single binary. the updating process will be mixed up and mass up the agent’s binary. If you don’t use Agent Auto Update feature, you can skip this.&lt;/li&gt;
&lt;li&gt;Each agent should run with &lt;strong&gt;the different agent home path&lt;/strong&gt;. As descirbed “Agent Home” section, it contains the each agent’s specific configuration and runtime data. So it’s important to specify the different home path per agent.&lt;/li&gt;
&lt;li&gt;Each agent should run with &lt;strong&gt;the different host id&lt;/strong&gt;. controller differenciates the agents by ip and host id combination and host-id is automatically resolved by calling InetAddress.getLocalHost().getHostName() in java. Therefore, controller think only one agent is running when two agent’s ip and host ids are same. To avoid this, you should provide the custom host-id at at least one of the agents.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To satisfy above constraints, you can run agents like below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install multiple agent binaries as much as you like to run.
&lt;ul&gt;
&lt;li&gt;1st  : ~/apps/ngrinder_agent_1&lt;/li&gt;
&lt;li&gt;2nd : ~/apps/ngrinder_agent_2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;run each agent using following command
&lt;ul&gt;
&lt;li&gt;1st : cd ~/apps/ngrinder_agent-1;   ./run_agent.sh --agent-home ~/.ngrinde-agent-1 --host-id first-agent&lt;/li&gt;
&lt;li&gt;2nd : cd ~/apps/ngrinder_agent-1;   ./run_agent.sh --agent-home ~/.ngrinde-agent-2 --host-id second-agent&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-command-line-options&quot; class=&quot;anchor&quot; href=&quot;#command-line-options&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line Options&lt;/h3&gt;
&lt;p&gt;nGrinder agent’s run_agent.sh commands takes several parameters to override the existing configurations in ${NGRINDER_AGENT_HOME}/agent.conf .&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;overriden properties&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-o, --overwrite-config&lt;/td&gt;
&lt;td&gt;-o&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Provide this If you want to overwrite the existing ${NGRINDER_AGENT_HOME}/agent.conf with current __agent.conf in the binary directory. This is the useful when you like to the existing agent to connect to the other controller.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ah / –agent-home&lt;/td&gt;
&lt;td&gt;-ah ~/.ngrinder-agent1&lt;/td&gt;
&lt;td&gt;ngrinder.agent.home&lt;/td&gt;
&lt;td&gt;agent home path. By default it’s the ~/.ngrinder_agent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ch / --controller-host&lt;/td&gt;
&lt;td&gt;-ch 10.10.10.10&lt;/td&gt;
&lt;td&gt;agent.controller_host&lt;/td&gt;
&lt;td&gt;the controller host name or IP to which this agent is connect.  If it’s not specified, ${NGRINDER_AGENT_ HOME}/agent.conf’s agent.controller_host value is used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-cp / --controller-port&lt;/td&gt;
&lt;td&gt;-cp 10023&lt;/td&gt;
&lt;td&gt;agent.controller_port&lt;/td&gt;
&lt;td&gt;the controller port number.  If it’s not specified, ${NGRINDER_AGENT_ HOME}/agent.conf’s agent.controller_port value is used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-r / --region&lt;/td&gt;
&lt;td&gt;-r region_owned_myid&lt;/td&gt;
&lt;td&gt;agent.region&lt;/td&gt;
&lt;td&gt;the controller’s region name. If it should be private agent, it should be {region_name}&lt;em&gt;owed&lt;/em&gt;{userid}. If it’s the controller is not cluster mode, you can omiit {region_name}.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-hi / --host-id&lt;/td&gt;
&lt;td&gt;-hi my_agent_1&lt;/td&gt;
&lt;td&gt;agent.host_id&lt;/td&gt;
&lt;td&gt;the agent host id. If not provided, host name is automatically selected.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-s / --silent&lt;/td&gt;
&lt;td&gt;-s&lt;/td&gt;
&lt;td&gt;common.silent_mode&lt;/td&gt;
&lt;td&gt;Make the agent output have only very important messages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-v / --version&lt;/td&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Show the agent’s version number and exit.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-D&lt;/td&gt;
&lt;td&gt;-D&lt;/td&gt;
&lt;td&gt;can override all&lt;/td&gt;
&lt;td&gt;Dynamic properties. This options can override all the configuration defined in agent.conf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-h / --help&lt;/td&gt;
&lt;td&gt;-h&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Show usage.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-configurations&quot; class=&quot;anchor&quot; href=&quot;#configurations&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configurations&lt;/h3&gt;
&lt;p&gt;When an agent starts up, it copied controller providing configurations into the ${NGRINDER_AGENT_HOME}. If there are already such configuration, it emits the warning message and skip the copy process.  agent.conf contains the base configuration when an agent runs. If the command line options are provided, provided options will override the some configuration specified this file.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-ngrinder_agent_homeagentconf&quot; class=&quot;anchor&quot; href=&quot;#ngrinder_agent_homeagentconf&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;${NGRINDER_AGENT_HOME}/agent.conf&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Compatible Keys (for ~nGrinder 3.2.X)&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;common.start_mode&lt;/td&gt;
&lt;td&gt;agent&lt;/td&gt;
&lt;td&gt;start.mode&lt;/td&gt;
&lt;td&gt;the mode in which agents run. agent and monitor can be used here. You don’t need to specify this at all.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;common.verbose&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;verbose&lt;/td&gt;
&lt;td&gt;Set true if you make agent output very detailed log into ${NGRINDER_AGENT_HOME}/log/agent.log file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;common.silent_mode&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Set true to make the agent log have only very important messages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.controller_host&lt;/td&gt;
&lt;td&gt;localhost&lt;/td&gt;
&lt;td&gt;agent.controller.ip, agent.console.ip, agent.controller_ip&lt;/td&gt;
&lt;td&gt;the controller host name or IP to which this agent is connect.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.controller_port&lt;/td&gt;
&lt;td&gt;16001&lt;/td&gt;
&lt;td&gt;agent.controller.port, agent.console.port&lt;/td&gt;
&lt;td&gt;the controller port number.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.region&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;the controller’s region name. If it should be private agent, it should be {region_name}&lt;em&gt;owed&lt;/em&gt;{userid}. If it’s the controller is not cluster mode, you can omiit {region_name}.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.host_id&lt;/td&gt;
&lt;td&gt;localhost’s hostname&lt;/td&gt;
&lt;td&gt;agent.hostid&lt;/td&gt;
&lt;td&gt;the agent host id. If not provided, host name is automatically selected.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.server_mode&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;false if you want to remove –server vm option in agent’s process run.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.all_logs&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;agent.send.all.logs&lt;/td&gt;
&lt;td&gt;true if you want to send the all agent’s processes log to controller when tests is finished. By default, it sends only one process’s log to avoid useless duplicated info.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.limit_xmx&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;false if you want to make each test’s process use be able to use 1GB memory. By default, agent process can not use more than 1GB because the more memory means longer gabage collection time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.java_opt&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;agent.javaopt&lt;/td&gt;
&lt;td&gt;Provide the additional java vm options which will be used when running each test’s process.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;agent.keep_logs&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;true if you want to keep the test’s logs even after a test is finished. By default, it removes all logs at the end of each test.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-agent-home-folder-structure&quot; class=&quot;anchor&quot; href=&quot;#agent-home-folder-structure&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Agent Home Folder Structure&lt;/h3&gt;
&lt;p&gt;In ${NGRINDER_AGENT_HOME}, there are some folders to store data used in an agent. Followings are description for them.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Folder Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;log&lt;/td&gt;
&lt;td&gt;This stores the agent log.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file-store&lt;/td&gt;
&lt;td&gt;This constains the each users lastest script and resources. To speed up the file distribution, the files are not deleted and kept here even after each test’s end as a cache.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;native&lt;/td&gt;
&lt;td&gt;This contains the native library to collect agent’s system usage.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Cluster-Architecture/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Cluster-Architecture"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;From nGrinder version 3.1, we introduced nGrinder controller clustering, which make the performance test can be executed by one of the clustered controller and support multiple set of agents(named region) to be used.&lt;br&gt;
Below is the architecture without cluster supports.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Cluster-Architecture-5c692.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;nGrinder uses an embedded svn server(SVNKit DAV) to manage script files. The svn repositories are stored in ${NGRINDER_HOME} directory.&lt;/li&gt;
&lt;li&gt;nGrinder uses EhCache to improve the data retrieval performance from DB and SVN repositories.&lt;/li&gt;
&lt;li&gt;nGrinder uses Spring Security to protect the system and uses Atlassian Plugin Framework for extensibility.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you enable clustering mode by configuring the system.conf (See link) and install nGrinder into multiple machine, the system architect is changed as below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Cluster-Architecture-4913e.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;All the controllers in the cluster shares the same DB and file system. All ngrinder controller should point same ${NGRINDER_HOME} folder which should be shared by NFS.&lt;/li&gt;
&lt;li&gt;Each controllers can have its own special properties and log output folder. This information will be saved in ${NGRINDER_EX_HOME} in the each controller.&lt;/li&gt;
&lt;li&gt;All controllers replicates the EhCache to each other to make some data to be visible in all controllers in cluster.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Each controller can serve nGrinder web content equally but handles the different test set depending the region. We don&#39;t provide any session clustering by default. So you may suffer login problem because sessions stored in a controller are not replicated to the other controllers. You may need to configure this by referring &lt;a class=&quot;internal absent&quot; href=&quot;/naver/ngrinder/wiki/Tomcat-Session-Clustering-Guide&quot;&gt;Tomcat Session Clustering Guide&lt;/a&gt; or use the sticky session on L4. If you are not a expert on this, Just let users to connect only one controller. It&#39;s the easiest. :-)&lt;/p&gt;
&lt;p&gt;How to configure the clustering?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Easy-Clustering-Guide&quot;&gt;Easy Clustering Guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Check &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Advanced-Clustering-Guide&quot;&gt;Advanced Clustering Guide&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Coding-Convention/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Coding-Convention"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;h3&gt;
&lt;a id=&quot;user-content-java&quot; class=&quot;anchor&quot; href=&quot;#java&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Java&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Code written for an nGrinder 3.X project should follow the &quot;Code Conventions for the Java Programming Language&quot;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/codeconv-138413.html&quot; rel=&quot;nofollow&quot;&gt;http://www.oracle.com/technetwork/java/codeconv-138413.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There are not many differences from Eclipse default java style. Just use the Eclipse default type.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-exceptions&quot; class=&quot;anchor&quot; href=&quot;#exceptions&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exceptions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;3.1.1 Beginning Comments
&lt;ul&gt;
&lt;li&gt;All source files should begin with a c-style comment that lists the class name, version information, date, and copyright notice:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;/*
 * Copyright (C) 2012 - 2012 NHN Corporation
 * All rights reserved.
 *
 * This file is part of The nGrinder software distribution. Refer to
 * the file LICENSE which is part of The nGrinder distribution for
 * licensing details. The nGrinder distribution is available on the
 * Internet at http://nhnopensource.org/ngrinder
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE, ARE HERE BY DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY FROM THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Comment
&lt;ul&gt;
&lt;li&gt;Provide a class comment like the following. You should provide a simple description, author, and the version from which this class is provided.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight highlight-source-java&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * Hibernate CUBRID Dialect&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * &lt;span class=&quot;pl-k&quot;&gt;@author&lt;/span&gt; JunHo Yoon&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * &lt;span class=&quot;pl-k&quot;&gt;@since&lt;/span&gt; 3.0&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;CUBRIDDialect&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;Dialect&lt;/span&gt; {
&lt;span class=&quot;pl-c1&quot;&gt;....&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Line Length
&lt;ul&gt;
&lt;li&gt;Avoid lines longer than 120 characters, as they are not handled well by many terminals and tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Packages
&lt;ul&gt;
&lt;li&gt;All ngrinder code is located under com.nhncorp.ngrinder package.&lt;/li&gt;
&lt;li&gt;Each big category of features is divided into subpackage in the com.nhncorp.ngrinder.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Do not use SQL directly, as this can cause DB incompatibilities.&lt;/li&gt;
&lt;li&gt;Eclipse Coding Style file : Eclipse_nGrinder.xml
&lt;ul&gt;
&lt;li&gt;You can import this style in Windows ==&amp;gt; Preferences ==&amp;gt; Java ==&amp;gt; Formatter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-javascript&quot; class=&quot;anchor&quot; href=&quot;#javascript&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaScript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;nGrinder project follows jQuery Coding Convention
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.jquery.com/JQuery_Core_Style_Guidelines&quot; rel=&quot;nofollow&quot;&gt;http://docs.jquery.com/JQuery_Core_Style_Guidelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Summary
&lt;ul&gt;
&lt;li&gt;Use camel case for variables and methods&lt;/li&gt;
&lt;li&gt;Indent code with space&lt;/li&gt;
&lt;li&gt;Long comment should be maeked /* ... */&lt;/li&gt;
&lt;li&gt;Strict equality checks (===) should be used preferentially to == wherever possible&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-htmljsp&quot; class=&quot;anchor&quot; href=&quot;#htmljsp&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTML/JSP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use underscore separated naming schemes for css, id and class.&lt;/li&gt;
&lt;li&gt;Avoid lines longer than 120 characters, as they are not handled well by many terminals and tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-xml&quot; class=&quot;anchor&quot; href=&quot;#xml&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XML&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Avoid lines longer than 120 characters, as they are not handled well by many terminals and tools.&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Controller-Configuration-Guide/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Controller-Configuration-Guide"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;This chapter describes the advanced nGrinder controller configuration. You may not need to read this guide if you are not a system admin. However if you want to run nGrinder as PAAS, you should read this chapter.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-controller-home&quot; class=&quot;anchor&quot; href=&quot;#controller-home&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controller Home&lt;/h3&gt;
&lt;h4&gt;
&lt;a id=&quot;user-content-ngrinder_home&quot; class=&quot;anchor&quot; href=&quot;#ngrinder_home&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;${NGRINDER_HOME}&lt;/h4&gt;
&lt;p&gt;When nGrinder Controller starts, nGrinder will create ${user.home}/.ngrinder directory into user’s home directory. this directory contains the default configuration files and data. The following is .ngrinder folder&#39;s default location.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Window   : C:\Users${user.home}.ngrinder&lt;/li&gt;
&lt;li&gt;Unix/Linux :${user.home}/.ngrinder&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But if you like to assign the other directory for the home directory, please set Environment Variables ${NGRINDER_HOME}  before running ngrinder or you can provide &quot;--ngrinder-home HOME_PATH&quot; in the command line.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -XX:MaxPermSize=200m -jar  ngrinder-controller-X.X.war --ngrinder-home /home/user/ngrinder
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if you like to run multiple nGrinder controllers(each will handle only one network region) and make them work as one(cluster mode), you should make all controller share the same ${NGRINDER_HOME} content.&lt;br&gt;
It’s usually done by using NFS for ${NGRINDER_HOME path}. See &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Cluster-Architecture&quot;&gt;Cluster Architecture&lt;/a&gt; for detail.&lt;/p&gt;
&lt;h4&gt;
&lt;a id=&quot;user-content-ngrinder_ex_home&quot; class=&quot;anchor&quot; href=&quot;#ngrinder_ex_home&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;${NGRINDER_EX_HOME}&lt;/h4&gt;
&lt;p&gt;${NGRINDER_EX_HOME} is used to specialize each controller in the cluster mode. By default, it’s set as ~/.ngrinder_ex.&lt;br&gt;
Not like ${NGRINDER_HOME}, ${NGRINDER_EX_HOME} is not automatically created when nGrinder starts up.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Window   : C:\Users${user.home}.ngrinder_ex&lt;/li&gt;
&lt;li&gt;Unix/Linux :${user.home}/.ngrinder_ex&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;${NGRINDER_EX_HOME} is not the subject to be shared by multiple controllers. Each controller can have its own extended home. A user can define additional system configuration in the ${NGRINDER_EX_HOME}/ system.conf.&lt;br&gt;
Controller will load the system configuration from ${NGRINDER_HOME}/ system.conf first, Then, it will try to load the system configuration from ${NGRINDER_EX_HOME}/ system.conf and override it to sytem configuration from ${NGRINDER_HOME}/ system.conf&lt;br&gt;
For example, cluster.region configuration for each cluster member can be set in ${NGRINDER_EX_HOME}/system.conf file.&lt;br&gt;
When ${NGRINDER_EX_HOME} folder exists and the controller is started in the cluster mode, the controller will output the log into ${NGRINDER_EX_HOME}/logs/ ngrinder_{region_name}.log file.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-command-line-options&quot; class=&quot;anchor&quot; href=&quot;#command-line-options&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line Options&lt;/h3&gt;
&lt;h4&gt;
&lt;a id=&quot;user-content-basic&quot; class=&quot;anchor&quot; href=&quot;#basic&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic&lt;/h4&gt;
&lt;p&gt;If you run a controller without WAS. You can provide several options at the CLI interface.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;overriden properties&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-p / –port&lt;/td&gt;
&lt;td&gt;-p 80&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;HTTP port of the server. The default port is 8080.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-c / --context-path&lt;/td&gt;
&lt;td&gt;-c ngrinder&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Web context path of controller. The default context path is “”. For example, if you provide “ngrinner” here, the access url will be “&lt;a href=&quot;http://localhost:8080/ngrinder%E2%80%9D&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/ngrinder”&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-cm / --cluster-mode&lt;/td&gt;
&lt;td&gt;-cm easy&lt;/td&gt;
&lt;td&gt;cluster.mode&lt;/td&gt;
&lt;td&gt;cluster mode. There are three availbale options(none / easy / advanced). The default value is “none”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-nh / --ngrinder-home&lt;/td&gt;
&lt;td&gt;-nh ~/ngrinder&lt;/td&gt;
&lt;td&gt;ngrinder.home&lt;/td&gt;
&lt;td&gt;home path. By default it’s the “~/.ngrinder”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-exh / --exhome&lt;/td&gt;
&lt;td&gt;-ex ~/ngrinder_ex&lt;/td&gt;
&lt;td&gt;ngrinder.exhome&lt;/td&gt;
&lt;td&gt;extended home path. By default it’s the “~/.ngrinder_ex” If you want to know what ngrinder extended home path is, See TBD.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-h / --help / –?&lt;/td&gt;
&lt;td&gt;-h&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;show help&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-D&lt;/td&gt;
&lt;td&gt;-Ddatabase=cubrid &amp;amp;database_url=blar&lt;/td&gt;
&lt;td&gt;can override all&lt;/td&gt;
&lt;td&gt;Dynamic properties. This options can override all the configuration defined in database.conf and system.conf&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;
&lt;a id=&quot;user-content-single-mode&quot; class=&quot;anchor&quot; href=&quot;#single-mode&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Single mode&lt;/h4&gt;
&lt;p&gt;If you run ngrinder in none cluster mode (which means you didn’t provide “-cm” option at all), The following additional option is available.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;overriden properties&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-cp / --controller-port&quot;&lt;/td&gt;
&lt;td&gt;-cp 9000&lt;/td&gt;
&lt;td&gt;controller.port&lt;/td&gt;
&lt;td&gt;controller port for agent connection.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;
&lt;a id=&quot;user-content-easy-cluster-mode&quot; class=&quot;anchor&quot; href=&quot;#easy-cluster-mode&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Easy cluster mode&lt;/h4&gt;
&lt;p&gt;Some companies uses multiple IDCs and they require the clustering (mulitple region support in a single nGrinder instance) feature. However nGrinder before 3.3 version requires Network File System to share ${NGRINDER_HOME} and Cubrid to have same DB by multiple controllers. We removes these requirements by allowing multiple controller installation in a single machine and allowing H2 TCP server connection. To understand easy clustering, we highly recommend to read our &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Easy-Clustering-Guide&quot;&gt;Easy Clustering Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can run controller in easy cluster mode by the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -XX:MaxPermSize=200m -jar  ngrinder-controller-X.X.war -cm easy !&amp;lt;a href=&quot;/wiki_ngrinder/entry/additional-options&quot; class=&quot;notexist&quot;&amp;gt;additional options&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following mandatory option should be provided.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;overriden properties&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-clh / --cluster-host&lt;/td&gt;
&lt;td&gt;-clh 200.1.22.3&lt;/td&gt;
&lt;td&gt;cluster.host&lt;/td&gt;
&lt;td&gt;controller ip or hostname for agent connection for current region.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-clp / --cluster-port&lt;/td&gt;
&lt;td&gt;-clp 10222&lt;/td&gt;
&lt;td&gt;cluster.port&lt;/td&gt;
&lt;td&gt;This cluster member&#39;s cluster communication port. Each cluster member should run with the unique cluster port&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-cp / --controller-port&lt;/td&gt;
&lt;td&gt;-cp 9000&lt;/td&gt;
&lt;td&gt;controller.port&lt;/td&gt;
&lt;td&gt;controller port for agent connection. Each cluster member should run with the unique controller port.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-r / --region&lt;/td&gt;
&lt;td&gt;-region NORTH&lt;/td&gt;
&lt;td&gt;cluster.region&lt;/td&gt;
&lt;td&gt;Region name. Each cluster member should run with the unique region name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-dt / --database-type&lt;/td&gt;
&lt;td&gt;-dt h2&lt;/td&gt;
&lt;td&gt;database.type&lt;/td&gt;
&lt;td&gt;The database type. h2 and curbrid is available.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-dh / --database-host&lt;/td&gt;
&lt;td&gt;-dh localhost&lt;/td&gt;
&lt;td&gt;database.host&lt;/td&gt;
&lt;td&gt;The database host name. The default value is localhost&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-dp / --database-port&lt;/td&gt;
&lt;td&gt;-dp 9092&lt;/td&gt;
&lt;td&gt;database.port&lt;/td&gt;
&lt;td&gt;The database port number. When cubrid is selected, the default is 33000 and h2 is slected the default value is 9092&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;
&lt;a id=&quot;user-content-advanced-cluster-mode&quot; class=&quot;anchor&quot; href=&quot;#advanced-cluster-mode&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced cluster mode&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;java -XX:MaxPermSize=200m -jar  ngrinder-controller-X.X.war -cm advanced
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Advanced cluster mode does not have any options. It just activates the cluster mode then get the cluster configuration from ${NGRINDER_HOME}/system.conf or ${NGRINDER_EX_HOME}/system.conf files.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;Controller-Configuration-Guide#cluster-related-configurations&quot;&gt;cluster realted configurations&lt;/a&gt; and &lt;a href=&quot;Controller-Configuration-Guide#ngrinder_ex_homesystemconf&quot;&gt;controller extended configurations&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-configurations&quot; class=&quot;anchor&quot; href=&quot;#configurations&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configurations&lt;/h3&gt;
&lt;p&gt;When a controller starts up, it copied default configurations into the ${NGRINDER_HOME}. You can modify them to set up the controller.&lt;/p&gt;
&lt;h4&gt;
&lt;a id=&quot;user-content-ngrinder_homedatabaseconf&quot; class=&quot;anchor&quot; href=&quot;#ngrinder_homedatabaseconf&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;${NGRINDER_HOME}/database.conf&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;This contains the database configuration. You can modify this file when you need to use Cubrid. By default, nGrinder uses H2 as a database.
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;database=H2&lt;/p&gt;
&lt;p&gt;database_username=admin&lt;/p&gt;
&lt;p&gt;database_password=admin&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- If you set only above options, H2 will create the DB in ${NGRINDER_HOME}/db/h2.db running as the embedded mode. In this case no ther process can not access this DB while runnning.
- If you have run H2 in the server mode not embedded mode by yourself. You should provide the database connection URL as well.  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;database_url=tcp://{your_h2_server_host_ip_or_name}:{the_h2_server_port}/db/ngrinder&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- If you like to use Cubrid, you need to set following configurations.  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;database=cubrid&lt;/p&gt;
&lt;p&gt;database_url={your_cubrid_host_ip_or_name}:{cubrid_port_maybe_33000}:{dbname}&lt;/p&gt;
&lt;p&gt;database_username=admin&lt;/p&gt;
&lt;p&gt;database_password=admin&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- NOTE: If you want to use the Cubrid DB High Availability feature. Please enables HA in cubrid following the guide and add the alternatives db address in database.conf  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;database_url_option=&amp;amp;althosts={you_cubrid_secondary_host_ip_or_name}:{cubrid_port_maybe_33000}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#### ${NGRINDER_HOME}/system.conf

##### Generic
- This contains controller configurations.
- You can modify these settings to calibrate the controller’s behavior.

|Key|Default|Compatible Keys (for ~nGrinder 3.2.X)|Description|
|---|-------|-------------------------------------|-----------|
|controller.verbose|false|verbose|Set true to see the more detailed log.|
|controller.dev_mode|false|testmode|Set true to run controller in dev mode. In the dev mode, the log goes to the default output(such as catalina.log in Tomcat) not ${NGRINDER_HOME}/logs/ and the security mode and cluster config verification are disabled. In addition, &quot;agent force update&quot; and &quot;agent auto approval&quot; is enabled. finally the script console is activated as well.|
|controller.demo_mode|false|demo|Set true to run controller in the demo mode. In the demo mode, each use does not allow to change the user password.|
|controller.security|false|security|Set true if security mode should be enabled. In the secutiry mode, nGrinder SecurityManager will be activated and limit the each test’s access to underlying resources/network in the agent. Please refer [Script Security](script-security)|
|controller.user_password_sha256|false|ngrinder.security.sha256|By default, nGrinder uses sha1 to encode passwords. If you like to use sha256, please set this true. However, you need to delete out all databases completly to apply the this configuration.|
|controller.usage_report|true|usage.report|Set false if you don&#39;t want to report ngrinder usage to google analytics. |
|controller.plugin_support|true|pluginsupport|Set false if the plugin should be de-activated. This is not the option applied on the fly. You need to restart the controller.|
|controller.user_security|false|user.security|Set true if you want to make some of the user profile fields(email, mobile phone) mandatory.|
|controller.allow_sign_up|false| |Set true if some users should be able to sign them by themselves. See [TBD](tbd)|
|controller.max_agent_per_test|10|agent.max.size|The maximum number of agents which can be attached per one test. This option is useful when you like to make nGrinder shared by many users. This configuration makes each test use only limited number of agents. For example, if you have 15 agents in total and you set 5 here, you can guarantee 3 users can run performance tests concurrently.|
controller.max_vuser_per_agent|3000|agent.max.vuser|The maximum number of vusers which can be used per one agent. In nGrinder, the vuser count means the total thread count. This should be carefully selected depending on the agent memory size. If you have the 8G RAM and 4 core agent, maybe the more than 10000 vusers can be executable. See TBD for our benchmark result.|
|controller.max_run_count|10000|agent.max.runcount|The maximum test run count for one thread. If you set this 10,000 and run 100 threads per an agent, the test can be executed 10,000 * 100 times at maximum.|
|controller.max_run_hour|8|agent.max.runhour|The maximum running hour for one test.|
|controller.max_concurrent_test|10|ngrinder.max.concurrenttest|The count of allowed maximun concurrent tests. If the more tests than specified here are started, some of them will be wating in the run queue.|
|controller.monitor_port|13243|monitor.listen.port|The monitor connecting port. The default value is 13243. When a perftest starts, the controller try to connect to the monitor in the specified target hosts for system statistics.|
|controller.url|auto-matically selected|ngrinder.http.url http.url|Controller URL (such as http://ngrinder.mycompany.com). This is used to construct the host name part of URL in the controller(such as SVN Link). If not set, the controller analyzes user request to represent URL text in the web page.|
|controller.controller_port|16001|ngrinder.agent.control.port|The port number to which each agent connects in the connection phase.|
|controller.console_port_base|12000|ngrinder.console.portbase|The base port number to which agents in the each test connects in the testing phase. If you allowed 10 concurrent tests by controller.max_concurrent_test=10 option, the ports from 12000 to 12009 are used for agents to connect the controller in the testing phase. You need to restart nGrinder to apply the this configuration.|
|controller.ip|all available IPs|ngrinder.controller.- ipaddress ngrinder.controller.ip|By default, the empty controller.ip configuration makes the controller bind to all available IPs in the current machine so that it can allow agents to be connected to all controller’s IP. Generally, It causes no problem. However, in the specialized env(such as EC2), more than 2 IPs(one for inboud and the other or outbound) are assigned. If you want to allow only one IP to be connected by the agent, you should put it here.|
|controller.validation_timeout|100|ngrinder.validation.timeout|Script validation timeout in the unit of sec. Increase this when you have the script which takes more than 100 secs for a single validation.|
|controller.enable_script_console|false| |true if the script console should be activated. Script console provides the way to directly access ngrinder internal.|
|controller.enable_agent_auto_approval|true| |false if the agent should be approved before using it. This option is useful when ngrinder is provided as PAAS.|
|controller.front_page_enabled|true| |Set false if the controller doesn’t have the internet access. this disables periodic RSS feed access to developer resources and QnAs.|
|controller.front_page_resources_rss|…|ngrinder.frontpage.rss|RSS URL for &quot;Developer Resources&quot; panel in the front page.|
|controller.front_page_resources_ more_url|…| |&quot;More&quot; URL for &quot;Developer Resources&quot; panel in the front page.|
|controller.front_page_qna_rss|…|ngrinder.qna.rss|RSS URL for &quot;QnA panel&quot; in the front page.|
|controller.front_page_ qna_more_url|…| |&quot;More&quot; URL for &quot;Developer Resources&quot; panel in the front page.|
|controller.front_page_ask_question_url|….|ngrinder.ask.question.url|&quot;Ask a question&quot; URL for &quot;QnA panel&quot; in the front page.|
|controller.help_url|…|ngrinder.help.url|The top most HELP link URL.|
|controller.default_lang|en|ngrinder.langauge.default|The default language if the user didn’t specify the langauge during login . This option is useful when you installs custom SSO plugin.|
|controller.admin_password_reset|false| |true if the admin password should be reset as &quot;admin&quot; while booting up. This option is useful when the admin lost its password. You should make it false after setting the admin password.|
|controller.agent_force_update|false| |true if the agents should always be updated when the update message is sent.  If it’s enabled, update will be performed even when the agent has later version than the controller’s.|
|controller.update_chunk_size|1048576| |The byte size of agent update message. by default, it’s set as 1048576(1MB). Agent update message contains the fragment of agent page and are sent to agents multiple times. If it’s bigger, the count of consequent messages are smaller so that it will be more speedy.|
|controller.safe_dist|false|ngrinder.dist.safe.region|true if you want to always enable the safe script transmission. If it is turned on, the each perf test starting speed will be slower but files are gurantee to be transmitted without errors.|
|controller.safe_dist_threshold|1000000|ngrinder.dist.safe.threashhold|If the files are bigger, the transmission error possibility is increased as well. nGrinder automatically enable safe script transmission by looking the file size. If you want to disable this, please make it 100000000.|

##### Cluster-Related Configurations
This file can have serveral cluster mode related options as well. Because ${NGRINDER_HOME}/system.conf should be shared by multiple controllers via NFS,
some cluster related configurations which applies to all controllers in the cluster can be located here for easy administration.  
Followings are the options.

|Key|Default|Compatible Keys (for ~nGrinder 3.2.X)|Description|
|---|-------|-------------------------------------|-----------|
|cluster.enabled|false|ngrinder.cluster.mode|true if the cluster mode should be activated.|
|cluster.mode|none| |easy if you want to run the multiple controllers in a single machine.|
|cluster.members|-|ngrinder.cluster.uris|Comma or semi-colon separated list of all cluster member’s IP. For example) - 192.168.1.1;192.168.2.2;192.168.3.3|
|cluster.port|40003|ngrinder.cluster.listener.port|cluster communication port. When it’s the easy mode, each controllers in a cluster should have unique cluster port. However it’s the advanced mode, all cluter should have the  same cluster port.|

#### ${NGRINDER_EX_HOME}/system.conf
As we described here, ${NGRINDER_EX_HOME} is used to provide the specialized configuration per each controller in the cluster mode.  You can add additional system.conf file here as well and define several per controller configurations.

If you run controller in the single mode or easy cluster mode, you don’t need to create this file at all. However if you run controller in the advanced mode, you may need following configurations in ${NGRINDER_EX_HOME}/system.conf file.

|Key|Default|Compatible Keys (for ~nGrinder 3.2.X)|Description|
|---|-------|-------------------------------------|-----------|
|cluster.port|40003|ngrinder.cluster.listener.port|cluster communication port. When it’s the easy mode, each controllers in a cluster should have unique cluster port.  However it’s the advanced|
|cluster.host|-|cluster.ip|Console binding IP of this region. If not set, console will be bound to all available IPs.|
|cluster.region|NONE|ngrinder.cluster.region|The region name of this cluster member.|
|cluster.hidden_region|false|ngrinder.cluster.region.hide|true if you want to make this controller invisible from cluster members. This is useful when you like to run a private controller for administration.|
|cluster.safe_dist|false|-|true if tje file transmission in this region should be done by safer way.|

#### ${NGRINDER_HOME}/process_and_thread_policy.js
This file defines the logic to determine the appropriate combination of processes and threads for the given count of vusers.  
This file provides the flexible way to configure the appropriate processes and threads. Users usually don’t know which process and thread combination can result the best performance. Therefore, nGrinder let a user just input expected vuser per agent and configure the process and thread count automatically.  
The default logic is like following.
```javascript
function getProcessCount(total) {
    if (total &amp;lt; 2) {
        return 1;
    }

    var processCount = 2;

    if (total &amp;gt; 80) {
        processCount = parseInt(total / 40) + 1;
    }

    if (processCount &amp;gt; 10) {
        processCount = 10;
    }
    return processCount;
}

function getThreadCount(total) {
    var processCount = getProcessCount(total);
    return parseInt(total / processCount);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default, the more than 10 processes are not allowed, and more than 40 threads are allocated per process when 80 vusers are used.&lt;br&gt;
You can freely rewrite this methods(getProcessCount() / getThreadCount()) to fit your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;a id=&quot;user-content-ngrinder_homegrinderproperties&quot; class=&quot;anchor&quot; href=&quot;#ngrinder_homegrinderproperties&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;${NGRINDER_HOME}/grinder.properties&lt;/h4&gt;
&lt;p&gt;This file defines the default underlying &quot;The Grinder&quot; behavior. Some are overloaded by nGrinder at runtime but some are not. In most cases, the admin doesn&#39;t need to change this file.&lt;br&gt;
Please refer &lt;a href=&quot;http://grinder.sourceforge.net/g3/properties.html&quot; rel=&quot;nofollow&quot;&gt;http://grinder.sourceforge.net/g3/properties.html&lt;/a&gt; for detail.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-plugins&quot; class=&quot;anchor&quot; href=&quot;#plugins&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h3&gt;
&lt;p&gt;The folder contains plugins. If you like to install new plugins(~~.jar) or upgrade existing plugins, just drop them into into this folder. They will be automatically scanned and activated.&lt;br&gt;
If you like to delete out plugins, just delete out plugin files from there. That’s it.&lt;br&gt;
You can find out available plugins TBD.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-home-folder-structure&quot; class=&quot;anchor&quot; href=&quot;#home-folder-structure&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Home Folder Structure&lt;/h3&gt;
&lt;p&gt;In ${NGRINDER_HOME}, there are some folders to store data used in nGrinder. Followings are description for them.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Folder Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;logs&lt;/td&gt;
&lt;td&gt;This store the nGrinder logs. nGrinder intercepts the tomcat log and saves the log in ngrinder.log file. This log contains only controller related logs. You can also monitor the content of this file through the admin menu.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;perftest&lt;/td&gt;
&lt;td&gt;This folder stores the each performance test related data.&lt;ul&gt;
&lt;li&gt;perftest/{test_id_range}/{test_id}/dist&lt;ul&gt;&lt;li&gt;contains the files to be distributed.&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;perftest/{test_id_range}/{test_id}/logs&lt;ul&gt;&lt;li&gt;contains the logs from agents.&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;perftest/{test_id_range}/{testid}/report&lt;ul&gt;&lt;li&gt;contains the statistics for the test.&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;download&lt;/td&gt;
&lt;td&gt;This folder contains the downloadable files like agent and monitor. For example, if you like to re-create the agent and monitor package, you can delete out the all contents in this folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;plugins&lt;/td&gt;
&lt;td&gt;This folder contains plugins. If you like to install new plugins(~~.jar) or upgrade existing plugins, just drop them into into this folder. They will be automatically scanned and activated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;repos&lt;/td&gt;
&lt;td&gt;This folder contains the each user&#39;s svn repository.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;script&lt;/td&gt;
&lt;td&gt;This folder contains the script validation related resources. This is only used when the validation is performed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;td&gt;This folder contains the H2 database data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;subversion&lt;/td&gt;
&lt;td&gt;This folder contains default configuration for underlying svnkit.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;webapp&lt;/td&gt;
&lt;td&gt;This folder contains controller’s web application files when it’s executed with the embedded web server.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Frequently-Asked-Question/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Frequently-Asked-Question"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;&lt;strong&gt;I had run the test with 2 process and 2 threads and I checked the log.The number of HTTP call seems like half of what I expected. What&#39;s wrong?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The underlying The Grinder engine makes a log file per process in the agent side when it executes a test. So if a test use 2 processes, it will generate 2 log files. These logs a test generate can be very huge(even giga-byte level) depending on the how much the error occurs and how long a test is executed. So we made nGrinder agents limit the size of log file and only passes only one log file per a agent process to controller.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why is record() not supported?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nGrinder 3.1 or prior use The Grinder 3.9.1 as the internal engine. The Grinder 3.9.1 let user choose to use Jython 2.2 or Jython 2.5. As default it uses Jython 2.2. record() is for Jython 2.5 and nGrinder does not ship with this version of Jython. We&#39;re planning to support Jython 2.5 soon. If you likely to use Jython 2.5 this time, simply download Jython 2.5 jar file from &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/python/jython/2.5.3/jython-2.5.3.jar&quot; rel=&quot;nofollow&quot;&gt;http://search.maven.org/remotecontent?filepath=org/python/jython/2.5.3/jython-2.5.3.jar&lt;/a&gt; and locate it the lib folder in the script list. Check How to use library. If you want to use python library embedded in jython, you should upload jython 2.5.3.jar which you can download from &lt;a href=&quot;http://search.maven.org/remotecontent?filepath=org/python/jython-standalone/2.5.3/jython-standalone-2.5.3.jar&quot; rel=&quot;nofollow&quot;&gt;http://search.maven.org/remotecontent?filepath=org/python/jython-standalone/2.5.3/jython-standalone-2.5.3.jar&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From nGrinder 3.1.1 uses Jython 2.5 as a default jython engine. You don&#39;t need to upload jython 2.5 by yourself.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why are image files in the resources folder not transfered to agents?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nGrinder 3,1 or prior distribute only files having &quot;xml&quot;, &quot;txt&quot;, &quot;json&quot;, &quot;properties&quot; extension as resources. So even you upload &quot;jpg&quot;, &quot;png&quot; in resources folder, they are ignored. We&#39;ll make it transfer every file in resources folder in nGrinder 3.1.1. Please wait.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From nGrinder 3.1.1, it transfers all files in the resources folder to agents .&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why are not my agents connecting the controller even after setting agent.conf?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nGrinder uses ${user.home}/.ngrinder folder to store and retrieve data. However if you install 32Bit JVM on 64bit JVM. ${user.home} returns ? then it does not work well. Please see &lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6972329&quot; rel=&quot;nofollow&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6972329&lt;/a&gt; . The solution is to install 64bit JVM on 64bit OS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Or... you may not have configured /etc/hosts well. Please check the &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Installation-Guide&quot;&gt;Installation Guide&lt;/a&gt; again.&lt;/p&gt;
&lt;/blockquote&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/General-Administration-Guide/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/General-Administration-Guide"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;h3&gt;
&lt;a id=&quot;user-content-first-access&quot; class=&quot;anchor&quot; href=&quot;#first-access&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First Access&lt;/h3&gt;
&lt;p&gt;Depending on how you have executed nGrinder, you may use a different URL to access the main page. If you run agent with java -jar ngrinder-controller-X.X.war, You may be able to access the first page by moving to the following URL&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://localhost:8080&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once you access the URL, you can see the log in page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/General-Administration-Guide-2aae5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-log-in-with-default-account&quot; class=&quot;anchor&quot; href=&quot;#log-in-with-default-account&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Log In with default Account&lt;/h3&gt;
&lt;p&gt;nGrinder creates 4 users at the first run. The predefined IDs are as follows.&lt;br&gt;
Each has name that reflects its role.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;admin, user, superuser, system&lt;/li&gt;
&lt;li&gt;Initial password is the same as name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are 4 user types (referred to as Roles)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Role&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ADMIN&lt;/td&gt;
&lt;td&gt;Manage nGrinder system including : User Management, Test Observation, Test Report Statistics and Agent Management, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;USER&lt;/td&gt;
&lt;td&gt;Test script, and then get its report data files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SYSTEM_USER&lt;/td&gt;
&lt;td&gt;Reserved for internal use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SUPER_USER&lt;/td&gt;
&lt;td&gt;Observe whole tests executed in nGrinder instance but can not configure the system.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To configure the system, you need to log in with an admin account.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;  Please don’t forget to change your password when you log in for the first time. If you leave your account with the default password, your nGrinder instance can be used by a hacker for a DDOS attack.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-agent-management&quot; class=&quot;anchor&quot; href=&quot;#agent-management&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Agent Management&lt;/h3&gt;
&lt;p&gt;Agent management in the admin menu offers agent operation and monitoring functions. Even when you have configured the agent to connect the controller, you need to approve each agent in the controller to make it effective. This step is required to prevent abnormal agents trying to connect to the controller from abusing the controller.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/General-Administration-Guide-61d4a.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you are admin, the menu above should be visible. You can click the Agent Management menu to manage agents.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/General-Administration-Guide-95345.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then, you should see the screen shown above. This shows the statuses of the attached agent. If we just allow all agent connections, there would be a potential risk. For this reason, nGrinder only uses approved agents. If you confirm that the agents listed here are OK, you can approve them. Some agents can be only used for specific users. Please refer to &lt;a class=&quot;internal absent&quot; href=&quot;/naver/ngrinder/wiki/User-Agent&quot;&gt;User Agent&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;You can monitor agent performance status by clicking each IP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/General-Administration-Guide-c9613.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;This graph shows the performance of each agent in the last 1 minute.&lt;/p&gt;
&lt;p&gt;From nGrinder 3.3, agent management page includes the agent auto update feature. See Agent Auto Update for detail.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-user-management&quot; class=&quot;anchor&quot; href=&quot;#user-management&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Management&lt;/h3&gt;
&lt;p&gt;Admin can create/delete and modify users through the user management menu. Each user can also modify his/her own profile as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/General-Administration-Guide-56342.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-script-console&quot; class=&quot;anchor&quot; href=&quot;#script-console&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Script Console&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;assets/General-Administration-Guide-83cfd.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;This is a useful admin tool for debugging. Admin can input Groovy code to monitor and control nGrinder internal status. for example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c1&quot;&gt;println&lt;/span&gt;(agentManager&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getAllAttachedAgents())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature is disabled by default. To enable the script console, put the following option in the system configuration.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;controller&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;enable_script_console&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important to know what you can refer in the script. The following variables are available.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;applicationContext (org.springframework.context.ApplicationContext)&lt;/li&gt;
&lt;li&gt;agentManager (org.ngrinder.perftest.service.AgentManager)&lt;/li&gt;
&lt;li&gt;agentManagerService (org.ngrinder.agent.service.AgentManagerService)&lt;/li&gt;
&lt;li&gt;regionService(org.ngrinder.region.service.RegionService)&lt;/li&gt;
&lt;li&gt;consoleManager (org.ngrinder.perftest.service.ConsoleManager)&lt;/li&gt;
&lt;li&gt;userService (org.ngrinder.user.service.UserService)&lt;/li&gt;
&lt;li&gt;perfTestService (org.ngrinder.perftest.service.PerfTestService)&lt;/li&gt;
&lt;li&gt;tagService(org.ngrinder.perftest.service.TagService)&lt;/li&gt;
&lt;li&gt;fileEntryService (org.ngrinder.script.service.FileEntryService)&lt;/li&gt;
&lt;li&gt;config (org.ngrinder.infra.config.Config)&lt;/li&gt;
&lt;li&gt;pluginManager (org.ngrinder.infra.plugin.PluginManager)&lt;/li&gt;
&lt;li&gt;cacheManager(org.springframework.cache.CacheManager)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please refer to nGrinder javadoc to learn the available classes and methods.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-log-monitoring&quot; class=&quot;anchor&quot; href=&quot;#log-monitoring&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Log monitoring&lt;/h3&gt;
&lt;p&gt;Sometime it’s important to see the server log to identify a problem and send a bug reports to the developers. Instead of catalina.out which tomcat uses by default, nGrinder intercepts the logging system and writes a log in the ${NGRINDER_HOME}/logs/ngrinder.log file.You can see the currently printing logs in the Log Monitoring menu. This is refreshed every 5 seconds in order to show the latest available logs.&lt;/p&gt;
&lt;p&gt;Log monitoring is available in the not cluster mode.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/General-Administration-Guide-555ec.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-test-policies&quot; class=&quot;anchor&quot; href=&quot;#test-policies&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Policies&lt;/h3&gt;
&lt;p&gt;Sometimes, you need to configure whole test execution policy. For example, you can set the maximum count of agents that each test can use. Or you can limit the max concurrent number of tests to minimize network loads. These kinds of policies can be configured by configuring the ${NGRINDER_HOME}/system.properties file.&lt;/p&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Getting-Started/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Getting-Started"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;ul&gt;
&lt;li&gt;Welcome to nGrinder World!&lt;/li&gt;
&lt;li&gt;To use nGrinder, you need to install and agents in advance.&lt;br&gt;
See &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Installation-Guide&quot;&gt;Installation Guide&lt;/a&gt; first. It&#39;s really easy.&lt;/li&gt;
&lt;li&gt;Then you can run sample tests within 1 min.&lt;br&gt;
See &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Quick-Start&quot;&gt;Quick Start&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Groovy-Script-Structure/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Groovy-Script-Structure"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;Not like &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Jython-Script-Structure&quot;&gt;Jython Script Structure&lt;/a&gt;, Groovy Script Structure is based on JUnit. It’s because we want to reuse existing JUnit experiences as much as possible. Several IDEs already well integrate JUnit and let a user to run the test case directly. If you created Goorvy Maven Project in script creation dialog box in nGrinder, you can enjoy the this excellent approach in your current IDE.&lt;/p&gt;
&lt;p&gt;For now, I’d like to explain the basic Groovy script structure. This is applied whether you choose Groovy Script or Groovy Maven Project.&lt;/p&gt;
&lt;p&gt;Following is a base template for groovy script.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;import static&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.script.Grinder.grinder&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import static&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.junit.Assert.*&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import static&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.hamcrest.Matchers.*&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.plugin.http.HTTPRequest&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.script.GTest&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.script.Grinder&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.scriptengine.groovy.junit.GrinderRunner&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.scriptengine.groovy.junit.annotation.BeforeThread&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.junit.BeforeClass&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.junit.Test&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;org.junit.runner.RunWith&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;HTTPClient.HTTPResponse&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * A simple example using the HTTP plugin that shows the retrieval of a&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * single page via HTTP.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * This script is auto generated by ngrinder.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * &lt;span class=&quot;pl-k&quot;&gt;@author&lt;/span&gt; ${userName}&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;@RunWith&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;GrinderRunner&lt;/span&gt;)
&lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;Test1&lt;/span&gt; {

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;GTest&lt;/span&gt; test;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HTTPRequest&lt;/span&gt; request;

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; This method is executed once per a process.&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;@BeforeProcess&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;beforeClass&lt;/span&gt;() {
        test &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;GTest&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pse&quot;&gt;${&lt;/span&gt;name&lt;span class=&quot;pl-pse&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        request &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HTTPRequest&lt;/span&gt;();
        test&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;record(request);
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;info(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;before process.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    }

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; This method is executed once per a thread.&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;@BeforeThread&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;beforeThread&lt;/span&gt;() {
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statistics&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;delayReports&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;;
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;info(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;before thread.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    }

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; This method is continuously executed until you stop the test&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;test&lt;/span&gt;(){
        &lt;span class=&quot;pl-k&quot;&gt;HTTPResponse&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-pse&quot;&gt;${&lt;/span&gt;url&lt;span class=&quot;pl-pse&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;302&lt;/span&gt;) {
            grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;warn(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Warning. The response may not be correct. The response code was {}.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode);
        } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;pl-c1&quot;&gt;assertThat&lt;/span&gt;(result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode, is(&lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt;));
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Groovy test case in nGrinder should be annotated with @RunWith(GroovyRunner). When you run this script in JUnit Runner of each IDE, this part makes GroovyRunner to control the JUnit behavior and mount the grinder context on JUnit.&lt;/p&gt;
&lt;p&gt;@Test annotated methods are subject to be executed repeatedly. As you can see above, you can assert the test result using JUnit assertion. If the assertion is failed, the last test bounded to this thread will be evaluated as a failure.&lt;/p&gt;
&lt;p&gt;Instead of @BeforeClass @Before @AfterClass @After annotations which are used  in the generic JUnit tests, Groovy test case in nGrinder uses its own annotation to control script behaviors.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Annotation&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Applied to&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@BeforeProcess&lt;/td&gt;
&lt;td&gt;Define behaviors which should be executed before the process is invoked&lt;/td&gt;
&lt;td&gt;static method&lt;/td&gt;
&lt;td&gt;Load resource files which are shared by threads. Define GTest and instrument the test target using record method.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@AfterProcess&lt;/td&gt;
&lt;td&gt;Define behaviors which should be executed after the process is terminated&lt;/td&gt;
&lt;td&gt;static method&lt;/td&gt;
&lt;td&gt;Close resource files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@BeforeThread&lt;/td&gt;
&lt;td&gt;Define behaviors which should be executed before the each thread is executed.&lt;/td&gt;
&lt;td&gt;member method&lt;/td&gt;
&lt;td&gt;Login the target system. Set up the thread bounded values. (For example, Cookie Handler)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@AfterThread&lt;/td&gt;
&lt;td&gt;Define behaviors which should be exeucted after the each thread is exeucted&lt;/td&gt;
&lt;td&gt;member method&lt;/td&gt;
&lt;td&gt;Logout the target system&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@Before&lt;/td&gt;
&lt;td&gt;Define behaviors which should be executed before every @Test annotated method are executed.&lt;/td&gt;
&lt;td&gt;member method&lt;/td&gt;
&lt;td&gt;Common logic which is shared by the multiple @Test annotated methods. Variable set up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@After&lt;/td&gt;
&lt;td&gt;Define behaviors which should be executed after every @Test annotated methods are executed.&lt;/td&gt;
&lt;td&gt;member method&lt;/td&gt;
&lt;td&gt;Not used much..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@Test&lt;/td&gt;
&lt;td&gt;Define the test behavior. Excuted muliple times&lt;/td&gt;
&lt;td&gt;member method&lt;/td&gt;
&lt;td&gt;Test body&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The execution flow can be illustrated by following.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/Groovy-Script-Structure-e6c97.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the test case sample, Please look below part carefully.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;GTest&lt;/span&gt; test;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HTTPRequest&lt;/span&gt; request;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; This method is executed once per a process.&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;@BeforeProcess&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;beforeProcess&lt;/span&gt;() {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Instead of Test in Jython, GTest is used here&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; It&#39;s because the identifier &quot;Test&quot; is alredy used by the @Test&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; GTest is the replacement to avoid the naming confliction.&lt;/span&gt;
    test &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;GTest&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;test name&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    request &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HTTPRequest&lt;/span&gt;();
    test&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;record(request);
    grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;info(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;before process.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In @BeforeProcess annotated method, it defines GTest instance and records the HTTPRequest instance to sense any calls on HTTPRequest instance and save it in the static member variable(request).&lt;br&gt;
It’s the first step of test statistic preparation. Any method calls on request variable will increase the TPS. If you want to record multiple HTTPRequest instances using multiple GTest named differently, You can just add GTest instance in another member variables and invoke record method on different HTTPRequest instance.&lt;/p&gt;
&lt;p&gt;You can define the multiple test methods in a single test case class as well. Just add @Test annotation on those like the following.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;testGoogle&lt;/span&gt;(){
    &lt;span class=&quot;pl-k&quot;&gt;HTTPResponse&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://www.google.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;302&lt;/span&gt;) {
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;warn(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Warning. The response may not be correct. The response code was {}.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode);
    } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;pl-c1&quot;&gt;assertThat&lt;/span&gt;(result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode, is(&lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt;));
    }
}

&lt;span class=&quot;pl-k&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;testYahoo&lt;/span&gt;(){
    &lt;span class=&quot;pl-k&quot;&gt;HTTPResponse&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://www.yahoo.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;302&lt;/span&gt;) {
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;warn(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Warning. The response may not be correct. The response code was {}.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode);
    } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;pl-c1&quot;&gt;assertThat&lt;/span&gt;(result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode, is(&lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, you should aware nGrinder GroovyRunner creates only one test case object per a thread not like that generic JUnit test cases which creates a separate test case object for each @Test annotated method. So if each @Test annotated methods share member variables, they can affect each other. It’s intended. In nGrinder test case, it’s very likely each @Test method relies on the previous @Test annotated method execution result. Therefore, if you save the previous test result in the member variable and refer it to decide to continue to next test method, you can easily implement the test dependency.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;boolean&lt;/span&gt; googleResult;

&lt;span class=&quot;pl-k&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;testGoogle&lt;/span&gt;(){
    googleResult &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;;
    &lt;span class=&quot;pl-k&quot;&gt;HTTPResponse&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://www.google.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;302&lt;/span&gt;) {
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;warn(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Warning. The response may not be correct. The response code was {}.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode);
    } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;pl-c1&quot;&gt;assertThat&lt;/span&gt;(result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode, is(&lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt;));
    }
    googleResult &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;;
}

&lt;span class=&quot;pl-k&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;testYahoo&lt;/span&gt;(){
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;googleResult) {
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;warn(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Just return. Because prev google test is failed.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt;;
    }
    &lt;span class=&quot;pl-k&quot;&gt;HTTPResponse&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://www.yahoo.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;302&lt;/span&gt;) {
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;warn(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Warning. The response may not be correct. The response code was {}.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode);
    } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
        &lt;span class=&quot;pl-c1&quot;&gt;assertThat&lt;/span&gt;(result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statusCode, is(&lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;How can you use library and resources?  If you don’t use &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Groovy-Maven-Structure&quot;&gt;Groovy Maven Structure&lt;/a&gt; yet, you can refer &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Jython-Script-Structure&quot;&gt;Jython Script Structure&lt;/a&gt; to how to include them in your script. It’s exactly same as Jython way. However if you use Maven structure plus Groovy, you can enjoy the easier library dependency setting and run the JUnit test in your IDE. Interested in this? Then continue to see the &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Groovy-Maven-Structure&quot;&gt;Groovy Maven Structure&lt;/a&gt; to know how to enable this for you.&lt;/p&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Groovy-Script/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Groovy-Script"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;nGrinder 3.2 supports Groovy as a another scripting language. It’s not a just replacement of Jython but also new test script development model. When you decide to write scripts with groovy in maven structure, you can reuse the existing development experiences with JUnit and IntelliJ.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Groovy-Script-Structure&quot;&gt;Groovy Script Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Groovy-Maven-Structure&quot;&gt;Groovy Maven Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal absent&quot; href=&quot;/naver/ngrinder/wiki/Import-Groovy-Maven-Project-in-IntellJ&quot;&gt;Import Groovy Maven Project in IntellJ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Groovy is not only convenient to write but also efficient to execute. Our benchmark result shows that the Groovy script which does same job as Jython script can have 2 times more virtual user count(especially thread count) per agent.&lt;/p&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/Guide/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/Guide"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;p&gt;This page provides the collection of nGrinder guides.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Installation-Guide&quot;&gt;Installation Guide&lt;/a&gt; / &lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Upgrade-guide&quot;&gt;Upgrade Guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Quick-Start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/User-Guide&quot;&gt;User Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;internal present&quot; href=&quot;/naver/ngrinder/wiki/Admin-Guide&quot;&gt;Admin Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/How-to-add-custom-monitor-data/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/How-to-add-custom-monitor-data"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;h3&gt;
&lt;a id=&quot;user-content-custom-monitoring&quot; class=&quot;anchor&quot; href=&quot;#custom-monitoring&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom monitoring&lt;/h3&gt;
&lt;p&gt;From nGrinder 3.1.3, nGrinder support the custom monitoring for targets. It can be used if you want to monitor target server statuses which are not provided as default by nGrinder monitor. All you need to do is to use any tools you like to collect the monitor data with some internal time. (It might be best if you set it as same as the sampling interval of nGrinder test.) and the data should be saved in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;${ngrinder_agent_home}/monitor/custom.data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The content of this file can have several monitoring values separated with “,” in the single line  like below:&lt;/p&gt;
&lt;p&gt;315630613,1123285602,1106612131&lt;/p&gt;
&lt;p&gt;Then you need to make sure the file is being updated during the test running. If you have a shell script named &quot;update.sh&quot; which updates custom.data file, you can run it regularly by&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;watch -n 1 update.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;nGrinder monitor reads custom.data file periodically if exists and send data to nGrinder controller.&lt;br&gt;
After the test finished, you can see the chart for these data in the target monitoring page of the detailed test report:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/How-to-add-custom-monitor-data-d64a2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Find there are charts named “CUSTOM MONITOR DATA 1”, “CUSTOM MONITOR DATA 2” .., till “CUSTOM MONITOR DATA 5”. nGrinder monitor can collect at most 5 custom data.&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-how-to-collect-jvm-status&quot; class=&quot;anchor&quot; href=&quot;#how-to-collect-jvm-status&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to collect JVM status&lt;/h3&gt;
&lt;p&gt;In the following guide, I will use java to get the java VM running information with JMX. If the target server is a java application like tomcat, we can use the way in this guide to get the VM running information of tomcat, and display the data in chart in the final report. As I said above, I will use JMX to get the VM data. But in the normal we will not enable the JMX server of tomcat. So we will use attach API to attach to the target process, and  enable the “management-agent”, and then we can connect with JMX to the target process.&lt;/p&gt;
&lt;p&gt;You can find the VMMonitor.java from &lt;a href=&quot;https://gist.github.com/Mavlarn/5289680&quot;&gt;gist&lt;/a&gt;. Be aware about the code that, in java VM, for different java version and different GC setting, the GC names will be different. So in this code, I get the GC names of current Java VM, and using these names to get target process GC information with JMX. So the Java environment you use to run this code should be same as that you run the target tomcat. And the VM option like “-server” or GC setting should also be same. Otherwise, you can not get the GC names of target tomcat process.&lt;/p&gt;
&lt;p&gt;And below, we will use this code to get the GC information of target process and save into custom.data file. The new code is as below:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-java&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.io.BufferedWriter&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.io.File&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.io.FileWriter&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.io.IOException&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.lang.management.GarbageCollectorMXBean&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.lang.management.ManagementFactory&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.util.HashSet&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.util.List&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;java.util.Set&lt;/span&gt;;

&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;javax.management.MBeanServerConnection&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;javax.management.ObjectName&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;javax.management.remote.JMXConnector&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;javax.management.remote.JMXConnectorFactory&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;javax.management.remote.JMXServiceURL&lt;/span&gt;;

&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;com.sun.tools.attach.AttachNotSupportedException&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;com.sun.tools.attach.VirtualMachine&lt;/span&gt;;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * Class description.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * &lt;span class=&quot;pl-k&quot;&gt;@author&lt;/span&gt; Mavlarn&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;GCMonitor&lt;/span&gt; {

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;Set&amp;lt;&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; youngGCNames &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HashSet&amp;lt;&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt;();
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;Set&amp;lt;&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt; oldGCNames &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HashSet&amp;lt;&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt;&amp;gt;&lt;/span&gt;();

    &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; {
        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Oracle (Sun) HotSpot&lt;/span&gt;
        youngGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Copy&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XX:+UseSerialGC&lt;/span&gt;
        youngGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;ParNew&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XX:+UseParNewGC&lt;/span&gt;
        youngGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;PS Scavenge&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XX:+UseParallelGC&lt;/span&gt;

        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Oracle (BEA) JRockit&lt;/span&gt;
        youngGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Garbage collection optimized for short pausetimes Young Collector&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XgcPrio:pausetime&lt;/span&gt;
        youngGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Garbage collection optimized for throughput Young Collector&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XgcPrio:throughput&lt;/span&gt;
        youngGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Garbage collection optimized for deterministic pausetimes Young Collector&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XgcPrio:deterministic&lt;/span&gt;

        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Oracle (Sun) HotSpot&lt;/span&gt;
        oldGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;MarkSweepCompact&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XX:+UseSerialGC&lt;/span&gt;
        oldGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;PS MarkSweep&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XX:+UseParallelGC and&lt;/span&gt;
                                        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; (-XX:+UseParallelOldGC or -XX:+UseParallelOldGCCompacting)&lt;/span&gt;
        oldGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;ConcurrentMarkSweep&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XX:+UseConcMarkSweepGC&lt;/span&gt;

        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Oracle (BEA) JRockit&lt;/span&gt;
        oldGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Garbage collection optimized for short pausetimes Old Collector&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XgcPrio:pausetime&lt;/span&gt;
        oldGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Garbage collection optimized for throughput Old Collector&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XgcPrio:throughput&lt;/span&gt;
        oldGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;add(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Garbage collection optimized for deterministic pausetimes Old Collector&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; -XgcPrio:deterministic&lt;/span&gt;
    }

    &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;CONNECTOR_ADDRESS&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;com.sun.management.jmxremote.localConnectorAddress&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;String&lt;/span&gt;[] &lt;span class=&quot;pl-v&quot;&gt;args&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;InterruptedException&lt;/span&gt; {
        &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (args &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; args&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;) {
            &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;err&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;println(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Please specify the target PID to attach.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
            &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt;;
        }

        &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; attach to the target application&lt;/span&gt;
        &lt;span class=&quot;pl-smi&quot;&gt;VirtualMachine&lt;/span&gt; vm;
        &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt; {
            vm &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;VirtualMachine&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;attach(args&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;a href&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;/wiki_ngrinder/entry/0&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; class&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;notexist&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;a&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;]);
        } &lt;span class=&quot;pl-k&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;AttachNotSupportedException&lt;/span&gt; e) {
            &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;err&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;println(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Target application doesn&#39;t support attach API.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
            e&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;printStackTrace();
            &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt;;
        } &lt;span class=&quot;pl-k&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;IOException&lt;/span&gt; e) {
            &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;err&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;println(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Error during attaching to target application.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
            e&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;printStackTrace();
            &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt;;
        }

        &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; get the connector address&lt;/span&gt;
            &lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; connectorAddress &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; vm&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getAgentProperties()&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getProperty(&lt;span class=&quot;pl-c1&quot;&gt;CONNECTOR_ADDRESS&lt;/span&gt;);
            &lt;span class=&quot;pl-smi&quot;&gt;MBeanServerConnection&lt;/span&gt; serverConn;
            &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; no connector address, so we start the JMX agent&lt;/span&gt;
            &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (connectorAddress &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;) {
                &lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; agent &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; vm&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getSystemProperties()&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getProperty(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;java.home&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;separator &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;lib&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                        &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;separator &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;management-agent.jar&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
                vm&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;loadAgent(agent);
                &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; agent is started, get the connector address&lt;/span&gt;
                connectorAddress &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; vm&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getAgentProperties()&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getProperty(&lt;span class=&quot;pl-c1&quot;&gt;CONNECTOR_ADDRESS&lt;/span&gt;);
            }

            &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; establish connection to connector server&lt;/span&gt;
            &lt;span class=&quot;pl-smi&quot;&gt;JMXServiceURL&lt;/span&gt; url &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;JMXServiceURL&lt;/span&gt;(connectorAddress);
            &lt;span class=&quot;pl-smi&quot;&gt;JMXConnector&lt;/span&gt; connector &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;JMXConnectorFactory&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;connect(url);
            serverConn &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; connector&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getMBeanServerConnection();
            &lt;span class=&quot;pl-smi&quot;&gt;ObjectName&lt;/span&gt; objName &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ObjectName&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;ManagementFactory&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;RUNTIME_MXBEAN_NAME&lt;/span&gt;);

            &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; Get standard attribute &quot;VmVendor&quot;&lt;/span&gt;
            &lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; vendor &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt;) serverConn&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getAttribute(objName, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;VmVendor&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
            &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;println(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;vendor:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; vendor);

            &lt;span class=&quot;pl-k&quot;&gt;String&lt;/span&gt;[] gcNames &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; getGCNames();
            &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;) {
                &lt;span class=&quot;pl-k&quot;&gt;long&lt;/span&gt; minorGCCount &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;
                &lt;span class=&quot;pl-k&quot;&gt;long&lt;/span&gt; minorGCTime &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;
                &lt;span class=&quot;pl-k&quot;&gt;long&lt;/span&gt; fullGCCount &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;
                &lt;span class=&quot;pl-k&quot;&gt;long&lt;/span&gt; fullGCTime &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;

                &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; currName &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; gcNames) {
                    objName &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ObjectName&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;java.lang:type=GarbageCollector,name=&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; currName);
                    &lt;span class=&quot;pl-smi&quot;&gt;Long&lt;/span&gt; collectionCount &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;Long&lt;/span&gt;) serverConn&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getAttribute(objName, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;CollectionCount&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
                    &lt;span class=&quot;pl-smi&quot;&gt;Long&lt;/span&gt; collectionTime &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;Long&lt;/span&gt;) serverConn&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getAttribute(objName, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;CollectionTime&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
                    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (youngGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;contains(currName)) {
                        minorGCCount &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; collectionCount;
                        minorGCTime &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; collectionTime;
                    } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (oldGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;contains(currName)) {
                        fullGCCount &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; collectionCount;
                        fullGCTime &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; collectionTime;
                    }
                    &lt;span class=&quot;pl-smi&quot;&gt;StringBuilder&lt;/span&gt; sb &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;StringBuilder&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;lt;a href=&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;wiki_ngrinder&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;entry&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;sb&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;appendgetgctypecurrname&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;append&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;sb&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;appendcount&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;collectioncount&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;sb&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;append&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;gctime&lt;span class=&quot;pl-k&quot;&gt;-&lt;/span&gt;collectiontime&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt; class=&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;notexist&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
                    sb&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(getGCType(currName))&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt; : &lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
                    sb&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Count=&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; collectionCount);
                    sb&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;     GCTime=&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; collectionTime);
                    sb&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;lt;/a&amp;gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
                    &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;println(sb&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;toString());
                }
                &lt;span class=&quot;pl-smi&quot;&gt;StringBuilder&lt;/span&gt; valueStr &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;StringBuilder&lt;/span&gt;();
                &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;custom data format is:&lt;/span&gt;
                &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;minorGCCount,minorGCTime,fullGCCount,fullGCTime&lt;/span&gt;
                valueStr&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(minorGCCount);
                valueStr&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;,&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
                valueStr&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(minorGCTime);
                valueStr&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;,&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
                valueStr&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(fullGCCount);
                valueStr&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;,&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
                valueStr&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;append(fullGCTime);
                writeToFile(valueStr&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;toString());
                &lt;span class=&quot;pl-smi&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;sleep(&lt;span class=&quot;pl-c1&quot;&gt;1000&lt;/span&gt;); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;sleep one second.&lt;/span&gt;
            }
        } &lt;span class=&quot;pl-k&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;Exception&lt;/span&gt; e) {
            e&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;printStackTrace();
        }
    }

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;getGCType&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;name&lt;/span&gt;) {
        &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (youngGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;contains(name)) {
            &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Minor GC&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
        } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (oldGCNames&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;contains(name)) {
            &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Full GC&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
        } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
            &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; name;
        }
    }

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;String&lt;/span&gt;[] &lt;span class=&quot;pl-en&quot;&gt;getGCNames&lt;/span&gt;() {
        &lt;span class=&quot;pl-k&quot;&gt;List&amp;lt;&lt;span class=&quot;pl-smi&quot;&gt;GarbageCollectorMXBean&lt;/span&gt;&amp;gt;&lt;/span&gt; gcmbeans &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ManagementFactory&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getGarbageCollectorMXBeans();
        &lt;span class=&quot;pl-k&quot;&gt;String&lt;/span&gt;[] rtnName &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;String&amp;lt;a href=&lt;/span&gt;&quot;/wiki_ngrinder/entry/gcmbeans-size&quot; class=&quot;notexist&quot;&amp;gt;gcmbeans.size()&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;a&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;;
        &lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; index &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;;
        &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;GarbageCollectorMXBean&lt;/span&gt; gc &lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; gcmbeans) {
            rtnName&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;a href&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;/wiki_ngrinder/entry/index&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; class&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;notexist&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;index&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;/&lt;/span&gt;a&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; gc&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getName();
            index&lt;span class=&quot;pl-k&quot;&gt;++&lt;/span&gt;;
        }
        &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; rtnName;
    }

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;writeToFile&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;gcData&lt;/span&gt;) {
        &lt;span class=&quot;pl-smi&quot;&gt;String&lt;/span&gt; currDir &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getProperty(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;user.dir&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        &lt;span class=&quot;pl-smi&quot;&gt;BufferedWriter&lt;/span&gt; writer &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;;

        &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;pl-smi&quot;&gt;File&lt;/span&gt; customFile &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;File&lt;/span&gt;(currDir &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;separator &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;custom.data&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
            &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;customFile&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;exists()) {
                customFile&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;createNewFile();
            }
            writer &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;BufferedWriter&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;FileWriter&lt;/span&gt;(customFile));
            writer&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;write(gcData);
            writer&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;flush();
        } &lt;span class=&quot;pl-k&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;IOException&lt;/span&gt; e) {
            &lt;span class=&quot;pl-smi&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;err&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;println(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Error to read custom monitor data:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; e&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getMessage());
        } &lt;span class=&quot;pl-k&quot;&gt;finally&lt;/span&gt; {
            &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (writer &lt;span class=&quot;pl-k&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;null&lt;/span&gt;) {
                &lt;span class=&quot;pl-k&quot;&gt;try&lt;/span&gt; {
                    writer&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;close();
                } &lt;span class=&quot;pl-k&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot;&gt;IOException&lt;/span&gt; e) {
                    e&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;printStackTrace();
                }
            }

        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some comments about the code are:&lt;/p&gt;
&lt;p&gt;a) We need to pass the target process ID as arguments to run.&lt;/p&gt;
&lt;p&gt;b) This code should be run under same java environment and VM option with the target process. Otherwise, the attaching will properly fail. And if the target tomcat process is running with “-server” option, also be aware to set “-server” option to run this java code.&lt;/p&gt;
&lt;p&gt;Because under different java version and setting, the GC names will be different, I founded some names and their types(minor or full GCl). They are not complete and maybe not very correct. If you use IBM JVM, you should modify the code by yourself.&lt;/p&gt;
&lt;p&gt;c) The custom values format is “minorGCCount,minorGCTime,fullGCCount,fullGCTime”.&lt;/p&gt;
&lt;p&gt;d) This java code should be run in “${ngrinder_agent}/monitor/” directory. Because in the code, it will create custom.data file in current directory.&lt;/p&gt;
&lt;p&gt;e) To compile the code, it needs “tools.jar” of JDK.  You need to compile it like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;javac -cp /home/ngrinder/jdk1.6.0_38/lib/tools.jar GCMonitor.java

#get target tomcat process ID, it is 24003
java -cp /home/ngrinder/jdk1.6.0_38/lib/tools.jar: GCMonitor  24003
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you should see the output in console as below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;current dir:/home/ngrinder/.ngrinder_agent/monitor
&amp;lt;a href=&quot;/wiki_ngrinder/entry/minor-gc-count3564-gctime27850&quot; class=&quot;notexist&quot;&amp;gt;Minor GC       : Count=3564    GCTime=27850&amp;lt;/a&amp;gt;
&amp;lt;a href=&quot;/wiki_ngrinder/entry/full-gc-count166-gctime65525&quot; class=&quot;notexist&quot;&amp;gt;Full GC        : Count=166     GCTime=65525&amp;lt;/a&amp;gt;
&amp;lt;a href=&quot;/wiki_ngrinder/entry/minor-gc-count3564-gctime27850&quot; class=&quot;notexist&quot;&amp;gt;Minor GC       : Count=3564    GCTime=27850&amp;lt;/a&amp;gt;
&amp;lt;a href=&quot;/wiki_ngrinder/entry/full-gc-count166-gctime65525&quot; class=&quot;notexist&quot;&amp;gt;Full GC        : Count=166     GCTime=65525&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And in custom.data file, the content is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3564,27850,166,65525
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, create a new test on nGrinder and set the target host properly. You can see the chart in test report:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/How-to-add-custom-monitor-data-f59f0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;(Because the GC count is not changed very much, so we can not see much difference from the chart.)&lt;/p&gt;
&lt;p&gt;In this way, you can add any kind of custom monitor data and check it from test report.&lt;/p&gt;

        </content>
      </entry>
      <entry>
        <id>https://github.com/naver/ngrinder/wiki/How-to-change-dns/ebf9393f3ca7f61d4b6dc1b30dfa420ffb9c6340</id>
        <published>2016-05-22T22:41:22+09:00</published>
        <updated>2016-05-22T22:41:22+09:00</updated>
        <link rel="alternate" type="text/html" href="/naver/ngrinder/wiki/How-to-change-dns"/>
        <media:thumbnail url="https://avatars1.githubusercontent.com/u/1000705?s=60&amp;v=4"/>
        <author>
          <name>junoyoon</name>
        </author>
        <content type="html">
          &lt;blockquote&gt;
&lt;p&gt;From nGrinder 3.3, multiple DNS entries to a single host name simulates L4 round-robin behavior.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-custom-dns&quot; class=&quot;anchor&quot; href=&quot;#custom-dns&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom DNS&lt;/h3&gt;
&lt;p&gt;If you need to call the target server with a domain name which is not registered in DNS server, usually this is done by adding the host entry in /etc/hosts. However configuring the tens of agents takes time. So.. nGrinder ships with custom DNS service internally. Instead of touching /etc/hosts, you can configure this on the Target Host field in the nGrinder test configuration. This settings will be automatically distributed when the test is executed. Just put the host name and IP pair in the target host files in the test configuration page. That&#39;s it.&lt;br&gt;
&lt;img src=&quot;assets/How-to-change-dns-65404.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-l4-simulation-by-multiple-dns-entries&quot; class=&quot;anchor&quot; href=&quot;#l4-simulation-by-multiple-dns-entries&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;L4 Simulation by multiple DNS entries&lt;/h3&gt;
&lt;p&gt;To make system the reliable and scalable , developers frequently use L4 in front of a number of servers so that clients access the L4 VIP (virtual IP) first and L4 distributes them into currently available back-end servers. L4 can be shared by multiple services so that L4 can distribute the requests to the different set of servers depending on where the requests come from.&lt;br&gt;
However, L4 is the limited resource and has its own capacity. If the count of requests is over than it can handle, they will drop some packet or crash. It can cause the problem when a single L4 is shared by multiple services and run the performance test to one of the services. The load might make the other service&#39;s packets lost or L4 itself can be crashed. Which means performance testing on the L4 should be avoid.&lt;br&gt;
We always recommend to write the script which connects to the servers directly not L4. If multiple servers should be accessed at a single test, this can be done by assign dynamic URL string in the script.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-groovy&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;@RunWith&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;GrinderRunner&lt;/span&gt;)
&lt;span class=&quot;pl-k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;TestRunner&lt;/span&gt; {

    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;GTest&lt;/span&gt; test
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HTTPRequest&lt;/span&gt; request
    &lt;span class=&quot;pl-k&quot;&gt;String&lt;/span&gt;[] ips &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;10.101.10.1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;10.101.10.2&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;10.101.10.3&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;10.101.10.4&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-k&quot;&gt;@BeforeProcess&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;beforeProcess&lt;/span&gt;() {
        &lt;span class=&quot;pl-k&quot;&gt;HTTPPluginControl&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;getConnectionDefaults()&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;timeout &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;6000&lt;/span&gt;
        test &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;GTest&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Test1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
        request &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;HTTPRequest&lt;/span&gt;()
        test&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;record(request)
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;info(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;before process.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
    }


    &lt;span class=&quot;pl-k&quot;&gt;@BeforeThread&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;beforeThread&lt;/span&gt;() {
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;statistics&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;delayReports&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;info(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;before thread.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
    }

    &lt;span class=&quot;pl-k&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;test&lt;/span&gt;(){
        &lt;span class=&quot;pl-k&quot;&gt;Random&lt;/span&gt; rand &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;Random&lt;/span&gt;()
        &lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; ip &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; ipsrand&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;nextInt(&lt;span class=&quot;pl-c1&quot;&gt;4&lt;/span&gt;)
        grinder&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;logger&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;info(ip)
        &lt;span class=&quot;pl-k&quot;&gt;def&lt;/span&gt; result &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;GET&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;http://&lt;span class=&quot;pl-smi&quot;&gt;$i&lt;span class=&quot;pl-smi&quot;&gt;p&lt;/span&gt;&lt;/span&gt;/&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        &lt;span class=&quot;pl-c1&quot;&gt;assertThat&lt;/span&gt;(result&lt;span class=&quot;pl-k&quot;&gt;.&lt;/span&gt;ststus, is(&lt;span class=&quot;pl-c1&quot;&gt;200&lt;/span&gt;))
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However this makes the script complex and not easy to understand. In case of HTTPS, things are worse. It&#39;s because each HTTPS call should have the domain name inside so that the HTTP certificate can be verified well. To avoid this, nGrinder 3.3 supports the L4 simulation by DNS rotation by putting same host name to multiple IPs in the target host fields.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;assets/How-to-change-dns-2b5d3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Whenever the new DNS resolution is required, the ngrinder underlying DNS engine checks there are multiple IPs mapped to the given DNS name. If there are multiple IPs, it randomly returns one of them.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// myserver.com will be resolved as one of 202.131.30.11 or 173.194.126.238
def result = request.GET(&quot;http://myserver.com/hello&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;2014-01-23 16:00:29,737 INFO  http://myserver.com/ -&amp;gt; 200 OK, 83390 bytes
2014-01-23 16:00:29,898 INFO  http://myserver.com/ -&amp;gt; 302 Found, 219 bytes Redirect, ensure the next URL is http://www.google.com/
2014-01-23 16:00:29,898 WARN  Warning. The response may not be correct. The response code was 302.
2014-01-23 16:00:30,157 INFO  http://myserver.com/ -&amp;gt; 200 OK, 83390 bytes
2014-01-23 16:00:30,452 INFO  http://myserver.com/ -&amp;gt; 302 Found, 219 bytes Redirect, ensure the next URL is http://www.google.com/
2014-01-23 16:00:30,452 WARN  Warning. The response may not be correct. The response code was 302.
2014-01-23 16:00:30,745 INFO  http://myserver.com/ -&amp;gt; 302 Found, 219 bytes Redirect, ensure the next URL is http://www.google.com/
2014-01-23 16:00:30,745 WARN  Warning. The response may not be correct. The response code was 302.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In above.. you can see some go to 173.194.126.223 (returns 302) and some go to 202.131.30.11 (return 200).&lt;/p&gt;
&lt;p&gt;When you use this feature, you should be careful about followings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The DNS names in the target host fields are not cached at all. So that we can guarantee to simulate different server access even for multiple calls in a single run. However when DNS names which are not specified at the Target Host fields will be cached internally.  It&#39;s because the external DNS server access in performance test can cause the serious problem.&lt;/li&gt;
&lt;li&gt;This DNS rotation doesn&#39;t aware of the HTTP session at all. You can not expect L4 sticky session feature here. Even when you access the server using DNS name multiple times in a single run, the different IPs are used to access the server.&lt;/li&gt;
&lt;/ul&gt;

        </content>
      </entry>
</feed>
